@DATABASE Symphonie.guide
@$VER: Symphonie.guide 2.4h
@AUTHOR Patrick Meng & Michel Vissers

@NODE Main "Welcome to Symphonie 2.4h"
@{U}                                                                             @{UU}

            Welcome to @{B}Symphonie@{UB} 2.4h -- © 1993-1997 Patrick Meng.
@{U}                                                                             @{UU}

			      @{"   Introduction  " LINK Introduction}
			      @{"    Copyright    " LINK Copyright}
			      @{"      Author     " LINK Address}

			      @{"   Installation  " LINK Installation}
			      @{"      Menus      " LINK Menus}
			      @{"     Windows     " LINK Windows}
			      @{"     Keyboard    " LINK Keyboard}

			      @{"  Sound Quality  " LINK Quality}
			      @{"     History     " LINK History}
			      @{"      To do      " LINK ToDo}
			      @{" Project  Design " LINK Projects}

			      @{"     Ordering    " LINK Ordering}
			      @{"      Music      " LINK MusicMarco}
@{U}                                                                             @{UU}

                     Please read the 'readme.txt' first !

                       NEW EMAIL ADDRESS: pmeng@vtx.ch

@ENDNODE

@NODE DSPPlugIns "DSP PlugIns."
@TOC SystemControl

@ENDNODE

@NODE Installation "Installation."
@TOC Main
Drag & Drop Installation


Copy the whole Symphonie drawer
into the place where it shall resider.

No further steps needed.


Please note:
--------------------------------------------
Symphonie needs the following assigns

  envarc:
  t:

to be present

These are automatically mounted on
a proper installed system
@ENDNODE

@NODE Quality "Sound quality"
@TOC Main
@{U}                                                                             @{UU}

                               About @{B}Symphonie@{UB}.
@{U}                                                                             @{UU}

- @{B}Symphonie@{UB}music is CPU intensive.
- @{B}Symphonie@{UB} is a program based on samples. Because of that, a great number
  of channels (e.g. long decay) is important.
- @{B}Symphonie@{UB} cannot use long samples. For that kind of editing exists HDR
  software (post mixing).

@{U}                                                                             @{UU}

                                    Resync
@{U}                                                                             @{UU}

To resyncronize the system, change the mixing frequency (System Ctrl/Freq).

@{U}                                                                             @{UU}

                                  Frequency
@{U}                                                                             @{UU}

The maximum frequency depends on the available hardware (System Ctrl/Freq).

The realtime output using the amiga audio hardware is because of the DMA
coupled to the display frequency.

Monitor             Max. Mixrate      Screenmode
------------------  ----------------  --------------------------------------
1084S(15kHz)        4kHz - 28 kHz     All.

1960/VGA/Multiscan  28kHz - 50 kHz    DblNTSC,DblPAL, MULTISCAN, Euro72

SuperVGA/Multiscan  50kHz and beyond  Only with edited screenmodes
				      (e.g. 31kHz->40kHz (For experts only).
@{U}                                                                             @{UU}

                                  Resolution
@{U}                                                                             @{UU}

The resolution is limited by the available hardware. An high resolution
results in a clear sound with little noise.

Amiga (Render Mode) : 16 Bit.
Amiga (Realtime)    : 9/14 Bit (without soundcard).

In render mode the output is redirected through a virtual soundcard with a
user definable resolution (8/16 bit).

@{U}                                                                             @{UU}

                        How to get the best results ?
@{U}                                                                             @{UU}

1. Good quality samples.
   - Use only the best.
   - Sample rate > 40 kHz.
   - Well edited.
   - 16 bit.

2. When using 8 bit samples, use the downsample function.

3. Use multiscan display modes for higher playing frequencies.

@{U}                                                                             @{UU}

                                    Output
@{U}                                                                             @{UU}

The actual (audible) output is limited to the available audio hardware, but
can be increased by expansion with suitable audio hardware.

@{B}Symphonie@{UB} Interne Qualität : Max ca 16-64 Bit	(sound depending)
@{B}Symphonie@{UB} @{I}Jr@{UI}      Qualität : Max 14 Bit		(84 dB Dynamic Range)
@{B}Symphonie@{UB} @{I}Pro@{UI}     Qualität : Max 16 Bit		(96 dB Dynamic Range)

The Amiga produces noise, for example caused by the built in hardware like
the diskdrives. Therefor to create REAL professional quality material you
need special hardware (soundcard) or use the render function.
  
@{U}                                                                             @{UU}

                                     Tips
@{U}                                                                             @{UU}

High quality:

Because mixing frequencies below 30 kHz can be problematic, the CPU load
can be halved: Audio modes LEFT, RIGHT.

Instead of a stereo signal, a mono signal is produced.
                                       
Noise:

Cause	: D/A Convertor of the hardware has a too low resolution.
Solution: Buy a 16 bit Soundcard or better.

Cause	: The samples have a too low resolution.
Solution: Use 16 bit samples.


Quantisizing noise:

Cause	: D/A Convertor of the hardware has a too low resolution.
Solution: Buy a 16 bit Soundcard or better.

Problem	: Samples sound metallic on all frequencies.
Cause	: System mixing rate is too low.
Solution: Increase System Ctrl/Freq.

Problem	: Some of the samples sound metallic, the rest sound good.
Solution: Downsample the metallic sounding samples (Instrument/D).

General
solution: Increase oversample (MENU:Prefs/S. Preprocessor/Oversample).

Problem	: The same sample sounds metallic when played at certain frequencies.
Cause	: The sample frequency is to low.
Solution: Downsample the sample (Instrument/D) and increase the notes 
	  one octave.

@ENDNODE


@NODE ViRT "ViRTual instruments."
@TOC Main
@{U}                                                                             @{UU}

                             ViRTual Instruments
@{U}                                                                             @{UU}

A ViRTual instrument is created by the built-in Wavetable Synthesis function.

Advantages of ViRTual samples:

- They don't need any disk space, since they are automatically calculated
  when loading a SymSONG or SymMOD.

- They can be used to:

  1. Create accord-samples (better results can be done by using sampled
     accords).
  2. Create mix-samples (e.g. Hihat and BassDrum into 1 sample).
  3. Reduce multiple tracks to 1 track.
  4. Filter samples, playing samples backwards, chorus.
  5. Complex special effects. 
  6. Increase sample quality (downsampling).

To create a ViRTual sample, the instruments to use must be entered in the
pattern:

  1. Note
     e.g. C-4 001+0 (C-4, Instrument 1,	volume 100%).
  2. Note with PitchUp/Down effect

@{U}                                                                             @{UU}

There are currently 4 types of ViRTual instruments:

MIX		Function: The MIX function is used to mix multiple samples
			  to 1 sample. All samples on the same row from the
			  cursor position to the end are mixed together.
			  Length and frequency of the resulting sample are
			  the same as the sample at the cursor position.
		NOTE	: When only 1 sample is used, a REMIX is done.
		WARNING	: To remain compatible, the volumes of the samples
			  to be mixed, have to be set to 100.

REMIX		Function: Theis function makes a virtual copy of the
			  current sample.
		NOTE	: The next instrument will be overwritten.
			  Because of some calculation inaccuracy the virtual
			  sample is not exactly the same as the original
			  sample and must be tuned.

QUE		Function: QUE creates a sample from a track. Effectively
			  it will 'paste' the instruments after each other
			  like it's being played. Frequency of the new
			  sample will be the same as the sample at the
			  cursor position.
		NOTE	: When only 1 sample is used, a REMIX is done.
		WARNING	: To remain compatible, the volumes of the samples
			  to be mixed, have to be set to 100.

TRANS		Function: Create a new sample which transforms from 1 to
			  another sample (10 cycles).
		NOTE	: Recommended samples are short-looped samples.
			  After the creation, the loops in the original
			  samples can be changed again.

@ENDNODE


@NODE Rendering "Rendering."
@TOC Main
@{U}                                                                             @{UU}

                                  Rendering
@{U}                                                                             @{UU}

To start the render process press the RENDER button. The sound output will
be redirected to a file. The render frequency is the same as the system
@{"frequency" LINK SystemControl}. MUTEed tracks are not rendered. DSP effects are active while
rendering.

The only operation allowed is the @{"STOP" LINK SystemControl} button. This is the only way to stop
the rendering. When the song is finished, rendering will be stopped
automatically.

Short files can be used as samples.

@{U}                                                                             @{UU}

RENDER		Function: Start rendering.

8		Function: Set 8 bit mode.

16		Function: Set 16 bit mode.

M		Function: Set mono mode.

S		Function: Set stereo mode.

PC		Function: Intel Format

HQ		Function: High quality mode.
		NOTE	: 50% slower, but better quality.
			  Also works in realtime.
			  Beta

A		Antialias : OBSOLETE, REMOVED
                -> Use Dsp Plugin : "LP Filter instead"
		

RAW		Function: Save as RAW data. (Motorola or Intel)

MAES		Function: Save as Maestro format. (Motorola)

WAV		Function: Save as Wave format. (Intel)

MAUD		Function: Save as 16 bit IFF. (Motorola)

@ENDNODE


@NODE IntMO "Payment by International Money Order"
@TOC Ordering

Please state the following:

	BIC (Bankcode)	-	LUKB CH 2260A
	Konto Nr	-	01-08-303019-00 HORW
	Name		-	PATRICK MENG

	(USA: via Citibank NY)

@ENDNODE


@NODE Cash "Payment in Cash"
@TOC Ordering

Send cash to:

	Patrick Meng
	Rosenfeldweg 4
	CH-6048 Horw
	Switzerland

@ENDNODE


@NODE Introduction "Introduction to Symphonie"
@TOC Main
@{U}                                                                             @{UU}

                         Introduction to @{B}Symphonie@{UB}.
@{U}                                                                             @{UU}

@{B}Symphonie@{UB} is a program with new audio routines which enables its users to
compose high quality music, also for games and other purposes.  Available
hardware can supported by using Audio Rendering (e.g.  16 bit soundcards).

All modules composed with @{B}Symphonie@{UB} will be adjusted within @{B}Symphonie@{UB} to the
available (Audio) hardware (Samplingrate, CPU speed)

@{B}Symphonie@{UB} works 100% NON destructive.
- The original data will NOT be changed by sample manipulations.
- Samples are stored in SymMODs unchanged. They remain the same as
  the original data on the harddisk of the composer.

The system features above mean:

- SymMODs are 100% hardware independent.
- @{B}Symphonie@{UB} enables DDD productions (fully digital productions with minimal
  signal loss).
  For example:
  - Composing with @{B}Symphonie@{UB}.
  - Exporting ("non realtime" Audio rendering, 16 bit, 48 kHz).
  - Post-editing with suitable HD recording software.

- SymMODs could be converted to prefered hardware platforms.
- Software updates could improve the quality of existing SymMODs (if needed
  hardware is available).
- A SymMOD composed with 16 bit samples in 8 bit @{B}Symphonie@{UB} will sound like
  it was composed with 16 bit @{B}Symphonie@{UB} when played on 16 bit @{B}Symphonie@{UB}.

@{B}Symphonie@{UB} hardware requirements:

	MC680EC20 or better
	4 MB Memory

@{B}Symphonie@{UB} software requirements

	OS 3.0 or better
	reqtools.library (by Nico Francois & Magnus Holmgren)

Recommended:

	MC68030/50Mhz or better
	Harddisk

	@{B}Symphonie@{UB} @{I}Jr@{UI}	: 16 MB Fastmem
	@{B}Symphonie@{UB} @{I}Pro@{UI}	: 32 MB Fastmem

@{U}                                                                             @{UU}

                            Technical information.
@{U}                                                                             @{UU}

@{B}Symphonie@{UB} was completely written in modular 68020 assembler.

Internally, the program runs object oriented. This is mainly visible in the
(short) program size.

The main routines are well optimized

@{U}                                                                             @{UU}

                            @{B}Symphonie@{UB} system info:
@{U}                                                                             @{UU}

- Maximum of 256 Mono channels (128 stereo channels)

- Volume resolution	:	16 Bit
- Frequency resolution	:	32 Bit
- Sample Preprocessor	:	16 Bit
- ViRT Sample Processor	:	16 Bit

- 2 Phase Oversampling
- Software DSP

INPUT: (Samples)

- Sample resolution	:	8/16 Bit
- Samplingrate		:	10 kHz - ca. 100 kHz

OUTPUT: (Audio Out)

- Sample resolution	:	9/14 Bit (Amiga without soundcard)
- Mixrate		:	10 kHz - 50 kHz (Amiga without soundcard)


AUDIO RENDERING: ("non realtime" Audio Out)

- Sample resolution	:	8/16 Bit
- Mixrate		:	5 kHz - ca. 250 kHz


Max 128 Samples * Max 2 MB (8 Bit Samples, Preoversampling=1) per Sample
= Max 0.25GB Samplematerial per Song (theoretical !! ;)

(Internal: Max 4 MB Sample length, depending on the preoversampling level)

@ENDNODE


@NODE Copyright "Copyright Notice"
@TOC Main
@{U}                                                                             @{UU}

                              Copyright Notice.
@{U}                                                                             @{UU}

@{B}Symphonie@{UB} (C) by Patrick Meng 1993-97 - All rights reserved
@{B}Symphonie@{UB} File Format (C) by Patrick Meng 1993-97 - All rights reserved

@{"SoundFX" LINK AboutSFX} (C) Copyright 1993-1997 Stefan Kost - All Rights Reserved

Trying to decode @{B}Symphonie@{UB} or the @{B}Symphonie@{UB} File Format is strictly
prohibited.

@{B}Symphonie@{UB} @{I}Player@{UI} is FREEWARE. (FD Player)
@{B}Symphonie@{UB} @{I}Player Pro@{UI} is FREEWARE. (FD Player)

@{I}FREE@{UI} @{B}Symphonie@{UB} is almost FD (C) by Patrick Meng (not for commercial use)
@{B}Symphonie@{UB} @{I}SHARE@{UI} is NO FD, NO FREEWARE,  (C) by Patrick Meng 
@{B}Symphonie@{UB} @{I}SE@{UI} (C) by Patrick Meng (Publishers may ask for Permission)
@{B}Symphonie@{UB} @{I}Jr@{UI} (C) by Patrick Meng 
@{B}Symphonie@{UB} @{I}Pro@{UI} (C) by Patrick Meng
@{B}Symphonie.guide@{UB} (C) by Patrick Meng


@{U}                                                                             @{UU}

                                 Special Thanks to:
@{U}                                                                             @{UU}


Michel Vissers      (for the FAST 'n FANCY looking english translation of the guide)
Jonas Österberg     (swedish guide, mailto: drkoss@thepentagon.com)
Adam Zalepa         (polish guide, mailto: expert@polbox.pl)
Stijn, Korneel, Tim (For very special support : titlepic, newicons, icons ...)


@{U}                                                                             @{UU}

                                 Disclaimer.
@{U}                                                                             @{UU}

@{B}Symphonie@{UB} is offered "as is", and the author will not be held responsible
for any damage resulting from (ab)use of this program.

@{U}                                                                             @{UU}

                                   Licence.
@{U}                                                                             @{UU}

@{B}Symphonie@{UB} @{I}SE@{UI} has been licenced to:

- Aminet Organisation            (Aminet CD 12)
- Amiga User Group Switzerland   (Clubdisk June/July 96)

@ENDNODE


@NODE Address "How to contact me..."
@TOC Main

                              RealTime Software

                                 Patrick Meng
                                Rosenfeldweg 4
                                  6048 Horw
                                 Switzerland

                               +41 41 340 6948


                           NEW EMAIL: pmeng@vtx.ch

@ENDNODE


@NODE Menus "Menus"
@TOC Main
@{U}                                                                             @{UU}

                                    Menus
@{U}                                                                             @{UU}

				   @{"   ?    " LINK Menu_About}
				   @{" System " LINK Menu_System}
				   @{"  File  " LINK Menu_File}
				   @{"  Edit  " LINK Menu_Edit}
				   @{"  Move  " LINK Menu_Move}
				   @{" Sample " LINK Menu_Sample}
				   @{"  Prefs " LINK Menu_Prefs}

@ENDNODE

@NODE Menu_About "The About menu"
@TOC Menus
@{U}                                                                             @{UU}

                                The About menu
@{U}                                                                             @{UU}

@{B}About @{B}Symphonie@{UB}@{UB}

    Function:	Displays the about window.
    Key     :	AMIGA-?.

@{B}Song info@{UB}

    Function:	Displays the song information.
    Key     :	AMIGA-!.

@ENDNODE

@NODE Menu_System "The System menu"
@TOC Menus
@{U}                                                                             @{UU}

                               The System menu
@{U}                                                                             @{UU}

@{B}Player/Song@{UB}

    Function:	Play the whole song.
    Key     :	F5.

@{B}Player/Sequence@{UB}

    Function:	Play the sequence.
    Key     :	F4.

@{B}Player/Position@{UB}

    Function:	Play from the current position.
    Key     :	F3.

@{B}Player/Pattern@{UB}

    Function:	Play the current pattern.
    Key     :	F2.

@{B}Player/Track@{UB}

    Function:	Play the current track.

@{B}Player/Stop@{UB}

    Function:	Stop playing.
    Key     :	ESC.



@{B}Audio Mode/Oversample 9BT@{UB}

    Function:	Oversampling Stereo 9 Bit.
    NOTE    :	When oversampling is used, the CPU load decreases 30-40%.
		However this halfs the frequency.

@{B}Audio Mode/Stereo 9BT@{UB}

    Function:	Stereo 9 Bit.

@{B}Audio Mode/Oversample@{UB}

    Function:	Oversampling Stereo 14 Bit.
    NOTE    :	When oversampling is used, the CPU load decreases 30-40%.
		However this halfs the frequency.

@{B}Audio Mode/Stereo@{UB}

    Function:	Stereo 14 Bit.
    NOTE    :	The 14 bit mode is done by using 2 audio channels to make 1.

@{B}Audio Mode/Mono@{UB}

    Function:	Mono 14 Bit.
    NOTE    :	The 14 bit mode is done by using 2 audio channels to make 1.

@{B}Audio Mode/Mono Surround@{UB}

    Function:	Mono 14 Bit and Surround Mode on.
    NOTE    :	Surround creates an artifical stereo signal from a mono
		signal (by using invert).

@{B}Audio Mode/Left@{UB}

    Function:	Left audio channel in 14 Bit.

@{B}Audio Mode/Right@{UB}

    Function:	Right audio channel in 14 Bit.



@{B}DSP/Deactivate@{UB}

    Function:	Deactivate all DSP Effects.
    Key     :	AMIGA-D.

@{B}DSP/Echo@{UB}

    Function:	(De)Activate Echo. The original	signal will be mixed with
		changeable delay and volume.

@{B}DSP/CrossEcho@{UB}

    Function:	(De)Activate CrossEcho. The left channel will be 'echoed'
		in the right channels and vica versa.

@{B}DSP/LP Filter@{UB}

    Function:	Postfilter Echo Signal.

@{B}DSP/Delay@{UB}

    Function:	(De)Activate Delay. The	original signal will be mixed with
		changeable delay and volume.

@{B}DSP/CrDelay@{UB}

    Function:	(De)Activate CrDelay. The original left signal will be mixed
		to the right channel with changeable delay and volume and
		vica versa.
    NOTE    :	Delay=0 results in mono sound.

@{B}DSP/Hall@{UB}

    Function:	(De)Activate Hall.
    Settings:	Predelay is System/Delay -> Len.
		Hallvolume is System/Delay -> Level.
		Hallsize is System/Hall ->  Len.
		Hallfeedback is System/Hall -> Level.
    NOTE    :	Delay Len < Hall Len !!

@{B}DSP/CrHall@{UB}

    Function:	Activate CrHall.

@{B}DSP/LP Filter@{UB}

    Function:	Postfilter Delay/Hall



@{B}Quit@{UB}

    Function:	Quit @{B}Symphonie@{UB}.
    Key     :	AMIGA-Q.

@ENDNODE

@NODE menu_File "The File menu"
@TOC Menus
@{U}                                                                             @{UU}

                                The File menu
@{U}                                                                             @{UU}

@{B}Song/Load@{UB}

    Function:	Load SymSONG.
    Key     :	AMIGA-L.

@{B}Song/Save As@{UB}

    Function:	Save SymSONG with (new) filename.
    Key     :	AMIGA-S.

@{B}Song/Save@{UB}

    Function:	Save SymSONG with current name.



@{B}Module/Load@{UB}

    Function:	Load SymMOD.
    Key     :	AMIGA-M.

@{B}Module/Save As@{UB}

    Function:	Save SymMOD with (new) filename.

@{B}Module/DiZCript@{UB}

    Function:	Include a textfile to a module, which will be displayed when
		Player/Song is executed.
    NOTE    :	It's not allowed to use special characters other than
		<RETURN>.

@{B}Module/Extract Samples@{UB}

    Function:	This will copy the samples from the selected module to t:.

@{B}Module/Extract 8 bit@{UB}

    Function:	Copy samples to t: and convert to 8 bit.

@{B}Module/Extract Quality@{UB}

    Function:	Set conversion quality.



@{B}Prefs/Load@{UB}

    Function:	Load preferences.

@{B}Prefs/Save As@{UB}

    Function:	Save preferences with (new) filename.

@{B}Prefs/Save Default@{UB}

    Function:	Save preferences as default.

@{B}Prefs/No Audio@{UB}

    Function:	Don't save audio preferences.
    Example :	Prefs/S Preprocessor/Set SampleBoost, stereo setup.

@{B}Prefs/No Video@{UB}

    Function:	Don't save GUI preferences.
    Example :	Window positions.

@{B}Prefs/No Song Setup@{UB}

    Function:	Don't save song setup.
    Example :	Number of channels.



@{B}Pack/Song@{UB}

    Function:	(De)Activate song packing.

@{B}Pack/Samples@{UB}

    Function:	(De)Activate deltapacking of samples.
    NOTE    :	Deltapacking for samples is used to get better packing
		results with for example LHA, Powerpacker and XPK libraries.

@ENDNODE

@NODE Menu_Edit "The Edit menu"
@TOC Menus
@{U}                                                                             @{UU}

                                The Edit menu
@{U}                                                                             @{UU}

@{B}Sequence/Cut@{UB}

    Function:	Cut the selected part, and place it in the buffer.

@{B}Sequence/Copy@{UB}

    Function:	Copy the selected to the buffer.

@{B}Sequence/Paste@{UB}

    Function:	Paste the buffer contents to the current position.



@{B}Position/Cut,Copy&Paste@{UB}

    Function:	See Sequence/Cut, Copy and Paste.



@{B}Pattern/Cut,Copy&Paste@{UB}

    Function:	See Sequence/Cut, Copy and Paste.

@{B}Pattern/Duplen@{UB}

    Function:	

@{B}Pattern/Shrink@{UB}

    Function:	Removes every second note.

@{B}Pattern/Expand@{UB}

    Function:	Inserts an empty note after every position.

@{B}Pattern/Duplicate@{UB}

    Function:	Copy the current pattern to the next.



@{B}Track/Cut,Copy&Paste@{UB}

    Function:	See Sequence/Cut, Copy and Paste.

@{B}Track/Mirror@{UB}

    Function:	Mirror the current track.

@{B}Track/Swap Buf@{UB}

    Function:	Swap current track with buffer.

@{B}Track/Rot Up@{UB}

    Function:	Rotate current track up.

@{B}Track/Rot Down@{UB}

    Function:	Rotate current track down.



@{B}Block/Cut-Copy-Paste@{UB}

    Function:	See Sequence/Cut, Copy and Paste.

@{B}Block/Add@{UB}

    Function:	Add Block.

@{B}Block/Expand@{UB}

    Function:	Expand block.

@{B}Block/Clear@{UB}

    Function:	Clear block.

@{B}Block/Swap@{UB}

    Function:	Swap block with buffer.



@{B}Note/Cut,Copy&Paste@{UB}

    Function:	See Sequence/Cut, Copy and Paste.

@{B}Note/Insert@{UB}

    Function:	Insert empty note.

@{B}Note/Delete@{UB}

    Function:	Delete current note.



@{B}Macro/Record@{UB}

    Function:	Activates the event recorder.
    NOTE    :	Recorded events are keys, menus and gadgets. the <SHIFT>
		status is recorded too.

@{B}Macro/Replay@{UB}

    Function:	'Play' recorded event list.



@{B}Undo@{UB}

    Function:	Undo the last change.

@ENDNODE

@NODE Menu_Move "The Move menu"
@TOC Menus
@{U}                                                                             @{UU}

                                The Move menu
@{U}                                                                             @{UU}

@{B}Sequence/Previous@{UB}

    Function:	Go to the previous sequence.

@{B}Sequence/Next@{UB}

    Function:	Go to the next sequence.

@{B}Sequence/First@{UB}

    Function:	Go to the first sequence.

@{B}Sequence/Last@{UB}

    Function:	Go to the last sequence.



@{B}Position/Previous@{UB}

    Function:	Go to the previous position.

@{B}Position/Next@{UB}

    Function:	Go to the next position.

@{B}Position/First@{UB}

    Function:	Go to the first position.

@{B}Position/Last@{UB}

    Function:	Go to the last position.



@{B}Pattern/Previous@{UB}

    Function:	Go to the previous pattern.

@{B}Pattern/Next@{UB}

    Function:	Go to the next pattern.

@{B}Pattern/First@{UB}

    Function:	Go to the first pattern.

@{B}Pattern/Last@{UB}

    Function:	Go to the last pattern.



@{B}Crsr/Previous@{UB}

    Function:	Go to the previous cursor position.

@{B}Crsr/Next@{UB}

    Function:	Go to the next cursor position.

@{B}Crsr/First@{UB}

    Function:	Go to the first cursor position.

@{B}Crsr/Last@{UB}

    Function:	Go to the last cursor position.

@ENDNODE

@NODE Menu_Sample "The Sample menu"
@TOC Menus
@{U}                                                                             @{UU}

                               The Sample menu
@{U}                                                                             @{UU}

@{B}Load@{UB}

    Function:	Load sample
    NEW     :	Keep <SHIFT> down to rename sample.



@{B}Bank/Load@{UB}

    Function:	Load samplebank.

@{B}Bank/Save As@{UB}

    Function:	Save samplebank.



@{B}Remove@{UB}

    Function:	Remove current sample.



@{B}Virtual/MIX@{UB}

    Function:	Create MIX instrument.

@{B}Virtual/QUEUE@{UB}

    Function:	Create QUEUE instrument.

@{B}Virtual/REMIX@{UB}

    Function:	Create REMIX instrument.

@{B}Virtual/TRANSWAVE@{UB}

    Function:	Create TRANSWAVE instrument.

@{B}Virtual/Recalc@{UB}

    Function:	Recalculate all ViRT Samples.



@{B}Support/Adjust Path@{UB}

    Function:	Adjust path for all samples.

@{B}Support/Reload All@{UB}

    Function:	Reload all samples, recalculate all ViRT instuments.

@ENDNODE

@NODE Menu_Prefs "The Prefs menu"
@TOC Menus
@{U}                                                                             @{UU}

                             The Preferences menu
@{U}                                                                             @{UU}

@{B}System/System Buffer@{UB}

    Function:	Number of buffers for @{B}Symphonie@{UB}'s multibuffering system.
    Range   :	4..8
    Standard:	4
    Example :	testing samples - 4
		playing song    - 8

@{B}System/DSP Buffer@{UB}

    Function:	Maximum number of DSP buffers.
    Range   :	1..255
    Standard:	15

@{B}System/Render Buffer@{UB}

    Function:	Maximum number of buffers for audiorendering.
    Range   :	8k..2MB
    Standard:	16k

@{B}System/Set Max Proc Vol@{UB}

    Function:	Set Maximum Processed Volume.
    Range   :	1..99
    Standard:	74
    Example :	SMPV=74 All 'events' with volume 75-100% are played at 100%
		SMPV=49 All 'events' with volume 50-100% are played at 100%
		SMPV=99 All 'events' are played at original volume.
				   


@{B}RealTime/Pos Change@{UB}

    Function:	(De)Activate Position & Pattern number updating.

@{B}RealTime/Scrolling@{UB}

    Function:	(De)Activate scrolling PatternEd (cursor will not follow
		the player).

@{B}RealTime/Spectrum@{UB}

    Function:	(De)Activate Spectrum Analyser.

@{B}RealTime/Scope@{UB}

    Function:	(De)Activate Sound Scope.

@{B}RealTime/Force Update@{UB}

    Function:	Activate 'optical' tools (e.g. Scope) also when there's no
		song playing.

@{B}RealTime/Win to front@{UB}

    Function:	Pop window to front when activated.



@{B}PattEd/Set Jump Length@{UB}

    Function:	Set the number of positions to skip when a note is entered.

@{B}PattEd/Pitch@{UB}

    Function:	(De)Activate recording of note.

@{B}PattEd/Instrument@{UB}

    Function:	(De)Activate recording of instrument number.

@{B}PattEd/Volume@{UB}

    Function:	(De)Activate recording of volume.



@{B}Load Song/Mod/Keep Pattern Number@{UB}

    Function:	Keep current number of patterns.
    Example :	Change a 64 pattern song to 100.

@{B}Load Song/Mod/Convert Song@{UB}

    Function:	Keep current song configuration (e.g.channels, patterns)
		when loading a new one.
    Example :	Change a 8 channels song to 16.



@{B}S.Preprocessor/Set AntiKnack@{UB}

    Function:	Removes knack at the end of badly edited samples. This
    		changes the fade in/out length of the sample preprocessor.
    		A small value results in a 'hard' start for all samples.
    		The anti knack algorythm turns off automatically when it
    		encounters a well edited sample ('silence' at the start and
    		end position).
    Range   :	1..1024 in samples
    Standard:	32
    NOTE    :	This function only works when loading/calculation samples.
		2,4,8,16,32... gives the best result.


@{B}S.Preprocessor/Set SampleBoost@{UB}

    Function:	Boosts the volume of all the samples.
    Range   :	1..200%
    Standard:	100%
    NOTE    :	When distortion occures when using DSP effects, decrease
		this value.

@{B}S.Preprocessor/Set Oversample@{UB}

    Function:	Decreases quantisizing noise for low frequency samples.
    Range   :	1..4 in samples.
		1 = 2x Pre Oversampling.
		4 = 16x Pre Oversampling.
    Standard:	1
    NOTE    :	This function only works when loading/calculating samples.

    		Maximum sample size when using a 8 bit mono sample:

		Oversample      Size	   Maximum pitch

		    1		2 MB		C-6
		    2		1 MB		C-5
		    3		512 Kb		C-4
		    4		256 Kb		C-3


@{B}Stereo Control/Set Sample Diff@{UB}

    Function:	Enhances the stereosound by creating a small difference of
		the starting positions of the samples between the left and
		right channel.
    Range   :	0..1000 in samples
    Standard:	0

@{B}Stereo Control/Set Pitch Diff@{UB}

    Function:	Enhances the stereosound by creating a small difference of
		the playing frequency of the samples between the left and
		right channel.
    Range   :	0..128
    Standard:	0


@{B}GUI/Change Look@{UB}

    Function:	Change look of the GUI.

@{B}GUI/Change Gadgets@{UB}

    Function:	2D / 3D Gadgets.

@ENDNODE



@NODE Windows "Windows"
@TOC Main
@{U}                                                                             @{UU}

                                   Windows
@{U}                                                                             @{UU}


			     @{"   System Control  " LINK SystemControl}
			     @{"     Instrument    " LINK Instrument}
			     @{"       SongEd      " LINK SongEd}
			     @{"     Pattern Ed    " LINK PatternEd}
			     @{"       NoteEd      " LINK NoteEd}
			     @{"       Scope       " LINK Scope}
			     @{" Spectrum Analyzer " LINK SpectrumAnalyzer}
			     @{"       Assist      " LINK Assist}

@ENDNODE



@NODE Assist "Assist."
@TOC Windows
Online Information.
@ENDNODE

@NODE SpectrumAnalyzer "Spectrum Analyzer."
@TOC Windows
Two Variants are present:

1. Harmonic Spectrum Analyzer
2. ColorOrgan
@ENDNODE

@NODE Scope "Scope."
@TOC Windows
Directly shows you the Soundstream.
@ENDNODE


@NODE SystemControl "The System Control window."
@TOC Windows
@{U}                                                                             @{UU}

                          The System Control window
@{U}                                                                             @{UU}

VOC		Function: Set amount of voices and do a system restart.
		Range	: 8, 16, 32, 64, 128 and 256.
		NOTE	: More channels result in a lower mixing quality :
			  - 8 channels = Max 13 Bit per output (14 Bit Mode:
			    Max.11 Bit per output).
			  - 256 channels = Max 8 Bit per output (14 Bit
			    Mode: Max. 6 Bit per output).

VOL		Function: Set the master volume.
		Range	: 0..100%.

BL		Function: Set balance.
		Range	: 0..100.
		Default	: 50.

FREQ		Function: Set mixing Frequency in Hz.

SPEED		Function: Set playing speed in BPM.

PLAYER		Function: Displays the actual playing time and total
			  sequence/song time.
		NOTE	: When a song contains only 1 sequence, sequence
			  time is song time.

@{U}                                                                             @{UU}

                                Player Control
@{U}                                                                             @{UU}

STOP		Function: Stop player.

PATT		Function: Play current pattern.

POS		Function: Play song from current position.

SEQ		Function: Play the current sequence.

SONG		Function: Play song.

@{U}                                                                             @{UU}

                                  Rendering
@{U}                                                                             @{UU}

RENDER		See @{"Rendering" LINK Rendering}.

FORMAT		See @{"Rendering" LINK Rendering}.

@{U}                                                                             @{UU}

                                 DSP Effects
@{U}                                                                             @{UU}

ECHO		Function: Set the echo settings.
		Range	: Length 1..DSP Buffer (in systemcycles).
			  Level 100%, 50%, 25%, 12.5%...

DELAY		Function: Set the delay settings.
		Range	: Length 0..15 (in systemcycles).
			  Level 100%, 50%, 25%, 12.5%...

HALL		Function: Set the hall settings.
		Range	: Length (hallsize) 0..16 (in systemcycles).
			  Level (feedback) 100%, 50%, 25%, 12.5%...

@{U}                                                                             @{UU}

                                     Diff
@{U}                                                                             @{UU}

SAMPLE DIFF	Function: Enhance stereo image.
		Default	: 0.

PITCH DIFF	Function: Enhance stereo image.
		Default	: 0.

@{U}                                                                             @{UU}

                                 DSP Plug Ins
@{U}                                                                             @{UU}

DSP PLUG IN	See @{"DSP Plugins" LINK DSPPlugIns}.

@ENDNODE

@NODE Instrument "The Instrument window"
@TOC Windows
@{U}                                                                             @{UU}

                            The Instrument window
@{U}                                                                             @{UU}

<, >		Function: Previous/Next instrument.
		Keys	: <DEL>, <HELP>
		Range	: 0..127

R		Function: Reload and/or recalculate instrument.

LOAD		Function: Load sample for current instrument.
		NOTE	: Keep <SHIFT> pressed to rename sample.

VOL		Function: Set the volume of the current instrument.
		Range	: 1..200%
		Default	: 100%
		NOTE	: 100% is the maximum volume, without 'deformations'.

@{U}                                                                             @{UU}

                                     Type
@{U}                                                                             @{UU}

1		Function: Default instrument without loop (1 Shot Sample).

L		Function: Looped instrument.

SUST		Function: Make a sustained instrument.
		NOTE	: This instrument plays:
			  - The 'attack' range for the sample.
			  - Following n-times the loop (Defined with LOOP#).
			  - The 'decay' rangefor the sample.

@{U}                                                                             @{UU}

                                      Op
@{U}                                                                             @{UU}

>>		Function: Play instrument on both channels (enter note in
			  the left channel).

()		Function: NODSP. Do not use DSP (e.g. CrossEcho) for this
			  instrument.

*		Function: NOTUNE. Do not transpose this instrument.

MUTE		Function: Turn off the current instrument.

REMOVE		Function: Remove the current sample.
		NOTE	: The sample will not be removed when ViRT
			  instruments based on the current sample exist.

@{U}                                                                             @{UU}

                                     Virt
@{U}                                                                             @{UU}

MIX		Function: Create a @{"ViRT" LINK ViRT}ual instrument.

QUE		Function: Create a @{"ViRT" LINK ViRT}ual instrument.

REMIX		Function: Create a @{"ViRT" LINK ViRT}ual instrument.

TRANSWAVE	Function: Create a @{"ViRT" LINK ViRT}ual instrument.

@{U}                                                                             @{UU}

                                    Tools
@{U}                                                                             @{UU}

RVS		Function: Reverse current.

I		Function: Invert the current sample (Phaseshift 180°).

D		Function: Downsample the current sample sample.
		NOTE	: Keep <SHIFT> depressed to decrease value.

FILT		Function: Interpolation filter for the current sample.
		NOTE	: Keep <SHIFT> depressed to decrease value.

@{U}                                                                             @{UU}

                                     Tune
@{U}                                                                             @{UU}

FINE		Function: Finetune of an instrument.
		Range	: -128..+127.
		NOTE	: The range is about a complete note.

PITCH		Function: Pitch shift of an instrument.
		Range	: -12..+12 (2 octaves).
		Example	: 0 - C-2 will be played as C-2.
			  1 - C-2 will be played as C#2.
			  4 - C-2 will be played as E-2.

@{U}                                                                             @{UU}

                                   Looping
@{U}                                                                             @{UU}

E		Function: Change loop end.

B		Function: Change loop beginning.

#		Function: Loopcount of a sustained instrument.



SYNC		Function: 

@{U}                                                                             @{UU}

                                   Waveform
@{U}                                                                             @{UU}

This is a visual representation of the current instrument.

Creating loops:

- Press LMB (left mouse button) on the waveform and keep it depressed.
- Drag mouse over waveform to select the range.
- Release LMB.

Loops are automatically optimized, to prevent any knacks.

@ENDNODE

@NODE SongEd "The SongEd window."
@TOC Windows
@{U}                                                                             @{UU}

                              The SongEd Window
@{U}                                                                             @{UU}



                                     Song
@{U}                                                                             @{UU}

A song consists of a defined number of following sequences.

REC		Function: (De)Activate recording mode.

LOAD		Function: Load song.

SAVE AS		Function: Save SymSONG with (new) name.

SAVE		Function: Save SymSONG.

MOD		Function: Load SymMOD.

NEW		Function: Start a new song.

LEN		Function: Set the pattern length (all data will be lost).

PATTERN		Function: Set the number of patterns (all data will be lost).

@{U}                                                                             @{UU}

                                   Sequence
@{U}                                                                             @{UU}

A sequence consists of a number of following positions.

#		Function: Select current sequence.
		Range	: 0..63.

C		Function: Copy current sequence to buffer.

X		Function: Copy current sequence to buffer and clear sequence.

P		Function: Copy buffer to current sequence.

DUP		Function: Duplicate current sequence to the next.

DEL		Function: Clear current sequence.

PLAY		Function: This sequence will be played.

SKIP		Function: This sequence will be skipped (MUTE).

END		Function: This sequence marks the end of a song.
		NOTE	: All following sequences will not be played.

BGN		Function: Set the start position of this sequence.

TRNS		Function: Set the transpose value for this sequence.

LEN		Function: Set the length of this sequence (beginning at the
			  start of the sequence).

LOOP		Function: Define how many times this sequence must be
			  played.

@{U}                                                                             @{UU}

                                   Position
@{U}                                                                             @{UU}

A position defines which part of a given pattern must be played.

#		Function: Change position in sequence.
		Keys	: NUMPAD '(', NUMPAD ')'.
		Range	: 0..511.

PAT		Function: Pattern number for this position.
		Keys	: NUMPAD '/', NUMPAD '*'.
		Range	: 0..Max Pattern (see above).

CPY		Function: Copy current position to buffer.

DUP		Function: Copy current position to the next.
		NOTE	: The following positions are moved 1 position.

PST		Function: Paste the buffer to the current position.

CLR		Function: Set the current position to the default values.

INS		Function: Insert 1 position.
		NOTE	: Moves all following positions 1 place.

DEL		Function: Delete the current position.
		NOTE	: The following positions are moved 1 place back.

BGN		Function: Startposition of a pattern.

LEN		Function: Number of positions to play.

CYCL		Function: Set the playing speed (in systemcycles).
		NOTE	: The speed setting applies only to the current
			  position.
			  Real BPM = SYSTEM_BPM x 1 / POSITION_CYCL
		Example	: Cycl = 1, Maximum playing speed (System Speed).
			  Cycl = 3, 1/3 of the maximum playing speed.
			  Cycl = 5, 1/5 of the maximum playing speed.

TRNS		Function: Set the transpose value.
		NOTE	: When @{"NOTUNE" LINK Instrument} is set, that instrument is not
			  transposed.

LOOP		Function: Set how many times to play the position.

@ENDNODE

@NODE PatternEd "The PatternEd Window."
@TOC Windows
@{U}                                                                             @{UU}

                             The PatternEd window
@{U}                                                                             @{UU}

<, >		Function: Select pattern.
		Keys	: NUMPAD '/', NUMPAD '*'.
		Range	: 0..Max Pattern (see above).

NOTE		Function: Mark note.

TRK		Function: Mark current track.

PAT		Function: Mark the complete pattern.

BLK		Function: Set block start at cursor position.
		Key	: <RETURN>.

C		Function: Copy marked block to buffer.

X		Function: Cut marked block to buffer.

P		Function: Paste buffer to current cursor position.

DUP		Function: Copy block in current pattern to the next pattern.
		NOTE	: Pattern is increased by one.

ADD		Function: Insert buffer at the current cursor position.

SHR		Function: Removes all empty positions of a block.

EXP		Function: Inserts between all positions of a block an empty
			  position.
		WARNING	: The bottom half of the block will be lost.

MIR		Function:

V		Function:

LOCK		Function:

KEYB		Function: This function will add the value to a given note.
		Example	:
				Note entered	KEYB	Note recorded
				--------------	------	-------------
				    C-2		  0	     C-2
				    C-2		  1	     C#2
				    C-2		  12	     C-3
		NOTE	: Keep <SHIFT> depressed to de/increase a whole
			  octave (12).

ROT		Function: Rotate block.
		NOTE	: When rotated down, the last note will be placed
			  at the top, and vica versa.

P		Function: De/Increase pitch at cursor position.
		NOTE	: Keep <SHIFT> depressed to change octave.

I		Function: De/Increase instrument at cursor position.
		NOTE	: Keep <SHIFT> depressed to add/subtract 10.

V		Function: De/Increase volume at cursor position.
		NOTE	: Keep <SHIFT> depressed to add/subtract 10.

MACRO		See @{"Edit menu" LINK Menu_Edit}.

REC		See @{"Edit menu" LINK Menu_Edit}.

@ENDNODE

@NODE NoteEd "The NoteEd window."
@TOC Windows
@{U}                                                                             @{UU}

                              The NoteEd window
@{U}                                                                             @{UU}


                                    Pitch
@{U}                                                                             @{UU}


SET	Function: Set current frequency.
	Type	: Complex effect.
	Params	: Pitch C0..C5 (0..72).
		  Instr 0..127.
	NOTE	: The instrument number must be set.

D/U	Function: Pitch slide up/down.
	Type	: Complex effect.
	Params	: Speed 0...255.
		  0 turns effect off.
	NOTE	: KeyOn and SetPitch stop the slide effect.

ADD	Function: Change the current frequency.
	Type	: Complex effect (PIT+).
	Params	: Intensity -128..127.
	NOTE	: The range (-128...127) is about 4 half notes.
		  New frequency = old frequency * (1 + C * 1 / 1024)
		                = old frequency + (old frequency * 1 / 1024)

VIBR	Function: Vibrato.
	Type	: Complex effect.
	Params	: Speed 0..128
		  Rate 0..255
		  0 = no vibrato, 255 = maximum vibrato.
	NOTE	: Vibrato can be used at the same time as other effects
		  (e.g. pitch slide).

+	Function: Increase frequency.
	Type	: Simple effect (PU1/PU2/PU4).

-	Function: Decrease frequency.
	Type	: Simple effect (PD1/PD2/PD4).

@{U}                                                                             @{UU}

                                  Instrument
@{U}                                                                             @{UU}

FROM	Function: Play the current sample from the given position.
	Type	: Complex effect.
	Params	: Position 0..255.
	NOTE	: - When this effect is used together with a instrument
		    number, the note must be valid.
		  - The sample position is calculated from the given para-
		    meters and the value of FADD.
		  - A variation with Pitch und Instrument available (FR&P).
		  - The current frequency remains the same.
	Example	: FADD= 0
		  Params : Sa.Pos 0...255 defines the startpositon of the
			   sample directly.
		  e.g.   : 0 = Start, 128 = Mid, 255 = End.

		  FADD> 0
		  Params : Sa.Pos 0...255 + FADD defines the startposition.
		  e.g.   : FADD=5
			   0 = Start, 128 = Mid, 250 = End.
			       (0+5)      (127+5)    (250+5)

		  e.g.   : FADD=128
			   0 = Mid, 127 = End, 255 = Illegal value.
			     (0+128)   (127+128)     (255+128 !)

FR&P	Function: "From & Set Pitch". Like FROM, but now the note and
		  instrument can be defined aswell.
	Type	: Complex effect.
	Params	: Pitch C0..C5.
		  Sample Position 0..255.
		  Instrument 0..127.

FSET	Function: "From Add Parameter := " Sets the FROMADD (offset) of an
		  sample.
	Type	: Complex effect.
	Params	: Sample Position 0...255
		  0 = Begin, 128 = Mid, 255 = End.
	NOTE	: The result of this effect is audible when a FROM or FR&P
		  effect is used.

FADD	Function: Changes "From ADD Parameter". Add parameter to FROMADD.
	Type	: Complex effect.
	Params	: Fine Pos -128...127
	NOTE	: The combination of FAD= and FADD can be used to define a
		  samplestart very precisely.
		  The result of this effect is audible when a FROM or FR&P
		  effect is used.
		  New FADD := Old FADD + Fine Pos * Samplelength / 16384.

SVIB	Function: Rotate the samplestart pointer sinus like.
	Type	: Complex effect.
	Params	: Speed 1..127 (System cycles).
		  0 = Stop effect.
		  Rate 0..100%
	NOTE	: The result of this effect is only audible when a FROM or
		  FR&P effect is used.
	Warning	: SVIB and other sample effect can not be used together.
		  Before a SVIB command, FSET(0) must be set.

@{U}                                                                             @{UU}

                                    Volume
@{U}                                                                             @{UU}

SET	Function: Set volumen of current channel.
	Type	: Simple effect.
	Params	: Volume 1..100%.

D/U	Function: Volume slide up/down.
	Type	: Complex effect.
	Params	: Speed 0...255
		  0 turns off volumeslide.

VOL+
	Type	: Complex effect.
	Params	: Intensity -128...127
	Function: Change the volume with the given intensity change.
	NOTE	: When the new volume gets beyond the allowed limits, the
		  old volume will be kept.
		  New Volume = Old Volume + Intensisty * 1/8

TREM	Function: Tremolo.
	Type	: Complex effect.
	Params	: Speed 0..128
		  Rate 0..255
		  0 = No tremolo, 255 = Maximum tremolo.
	NOTE	: Tremolo can be used together with other effects
		  (e.g. volumeslide).

AC
	Type	: Complex effect.
	Params	: Start 0..100 (Start volume at samplestart).
		  End 0..100 (End volume at sampleend).
		  Type 0..1 (0=Off, 1= RampTo).
		  Type(0) turns off this effect.
	Function: this effect couples the volume directly to the sample-
		  position (SamplePosition To Volume).
		
                      So können Anschlagsakzentuierungen oder Stereoeffekte
                      erzielt werden.

	NOTE	: All volumen effects, except for tremolo, will be made
		  inaudible (internally however they continue).

OFF	Function: Turn off the volume of the current channel.
	Type	: Simple effect.

ON	Function: Turn on volume of the current channel.
	Type	: Simple effect.


@{U}                                                                             @{UU}

                                    Other
@{U}                                                                             @{UU}

SPD	Function: Set new speed.
	Type	: Complex effect.
	Params	: Cycles 1...255.
	NOTE	: The new speed will be used untill a new position is played
		  or the speed is changed again.
	Example	: CYCL = 1  : Maximum playing speed (System Speed).
                  CYCL = 3  : 1/3 of the maximum speed.
                  CYCL = 5  : 1/5 of the maximum speed.

KEYOFF	Function: Play the decay part of an instrument.
	Type	: Simple effect.
	NOTE	: This will only work with SUSTained instruments.

ECHO	Function: Set the current echo settings.
	Type	: Complex effect.
	Params	: Effect types Off, Normal, CrossEcho, Cross2 (Resonator).
		  Level 100%,50%,25%...
		  Length 1..n

DELY
	Function: Set the current delay settings.
	Type	: Complex effect.
	Params	: Effect types Off, Normal, Cross.
		  Level 100%,50%,25%...
		  Length 1..n

@{U}                                                                             @{UU}

WARNING:	Retrig = Beta release
		CV     = Beta release
@{U}                                                                             @{UU}

@{I}SIMPLE EFFECTS@{UI}

Stand-alone effect which do not require any parameters.

@{I}COMPLEX EFFECTS@{UI}
  
Effects which require 1 to a maximum of 3 parameters, to enable a large
variety of possibilities.

@ENDNODE

@NODE Keyboard "Keyboard shortcuts"
@TOC Main
@{U}                                                                             @{UU}

                                   Keyboard
@{U}                                                                             @{UU}

@{I}ESC@{UI}		-	Stop the player.
@{I}F1@{UI}		-	(De)Activate channel.
@{I}F2@{UI}		-	Play the current pattern.
@{I}F3@{UI}		-	Play the current sequence from the current position.
@{I}F4@{UI}		-	Play the current sequence.
@{I}F5@{UI}		-	Play the complete song.
@{I}F9@{UI}		-	(De)Activate recording.
@{I}F10@{UI}		-	Load sample.
@{I}TAB@{UI}		-	Jump to the next 'tab' position
@{I}SHIFT+TAB@{UI}	-	Set 'tab' position (Deafualt: 0, 16, 32, 48, 63).
@{I}RETURN@{UI}		-	Set block start (1x) and block end (2x).
@{I}SPACE@{UI}		-	Clear current note.
@{I}SHIFT+SPACE@{UI}	-	Clear current track.

@{I}SHIFT@{UI}		-	When used with buttons in/decreases 10 or in case
			of notes in/decreases 12 (1 octave).

@{U}                                                                             @{UU}

Numeric Keypad
@{U}                                                                             @{UU}

@{I}'[', ']'@{UI}	-	Position up/down.
@{I}SHIFT+'[', ']'@{UI}	-	10 positions up/down.
@{I}'/', '*'@{UI}	-	Pattern up/down.
@{I}SHIFT+'/', '*'@{UI}	-	10 patterns up/down.
@{I}Ins@{UI}		-	Insert note.
@{I}Del@{UI}		-	Delete note.
@{I}'+'@{UI}		-	Volume +1.
@{I}SHIFT+'+'@{UI}	-	Volume +10.
@{I}'-'@{UI}		-	Volume -1.
@{I}SHIFT+'-'@{UI}	-	Volume -10.
@{I}6@{UI}		-	Instrument +1.
@{I}SHIFT+6@{UI}		-	Instrument +10.
@{I}9@{UI}		-	Instrument -1.
@{I}SHIFT+9@{UI}		-	Instrument -10.
@{I}5@{UI}		-	Pitch +1.
@{I}SHIFT+5@{UI}		-	Pitch +10.
@{I}8@{UI}		-	Pitch -1.
@{I}SHIFT+8@{UI}		-	Pitch -10.

@ENDNODE


@NODE History "The History of Symphonie"
@TOC Main
@{U}                                                                             @{UU}

                             History of @{B}Symphonie@{UB}
@{U}                                                                             @{UU}

v2.4f rel 7	Memory Protection System improved
		1x Memory violation fixed
		Realtime Declicking System implemented for |>>|
		instruments, too.

		PT module loader/converter(v1.0) final:
		- loads PT "M.K. 31Sample/64Pattern" MOD format
		- samples are saved to t:
		- songstructure is interpreted
		- KeyOn, SetVol events are converted
		- Instruments/Poslist is not yet converted

		(XM converter module, soon)

v2.4f rel 6	ColorOrgan: Colors modified, ColorInterpreter modified
		ZeroVolume processing fixed for @{B}Symphonie@{UB} @{I}Jr@{UI}
		PT loader/converter BETA:
		- loads "M.K. 31Sample" MOD format
		- samples are saved to t:
		- songstructure is interpreted
		- events/poslist is not yet converted

v2.4f rel 5	AIFF Sample Format support (MAC Samples)
		Memory Protection System improved
		Fastplay Mode= Centerplaymode
		SampleLoader now shows some info about the Sampleformat
		WAV AutoConverting Unit modified
		Runs now on  A1200/030-50
		- 40 Channels at ca. 36 kHz (using the bag of tricks)
		- 32 Channels at ca. 40 kHz (using some fastplay samples)

v2.4f rel 3	SampleLoader now shows some info about the Sampleformat
		WAV AutoConverting Unit modified
		Transwave Synthesis fully implemented for @{B}Symphonie@{UB} @{I}Jr@{UI}

v2.4f rel 1	AIFF Sample Format support (MAC Samples)

v2.4e rel 2	Sample Mixer: Clicks removed appearing at end of Samples
		AntiClick System improved
		Realtime DeClicking System rewritten

v2.4e		Dsp PlugIn : Bug fixed in Dsp GUI (Double Zeros for Strings)
		Gui Prefs
		New Gui Possibilities
		Quick Prefs (GUI, Paths, Screenmode)
		Sampleboost now included into Songs
		Audio Rendering much faster (to HD or to ZIP by iomega)

v2.4d rel 2	New Loopsystem fully implemented (Final)
		DSP System v1.0 fully implemented
		- Now we have an instrument based DSP, no longer
		  global DSP on all channels !!

V2.4d rel 1	Dsp Plug In System implemented
		Anticlicking improved

V2.4c rel 1	Old Loopsystem improved for better Looping (@{B}Symphonie@{UB} @{I}Pro@{UI})
		Antiknack (Anticlicking) rewritten
		New Loopsystem fully implemented
		Loopsystem: Beta Release (Clicks with 100% Loops)

V2.4b rel 2	Small Loop modifications, 8svx loader modified.

V2.4b		Major Bug detected in release 2.4 and fixed (Guru fixed)
		8svx loader modified (Stereo sample detection fixed)

V2.4		NEW: MasterVolume
		NEW: Balance
		SampleLoader modified (higher compatibility)


V2.3e		Small Bugs fixed in PattEd (Optical Display)
		NEW: More Pricing Possibilites
		NEW: Extract Quality

V2.3d		Small bugs fixed
		Sample Import/Export Removed (obsolete)
		Extract as 8 Bit working for Waves and Maestro Samples

V2.3c		Guide corrected and improved. Guide Updated.
		Soundprocessing is done in Softint (pri 0)
		Audiomodes Left/Right Surr changed to Mono Left/ Mono Right
		CPU overload check implemented: @{B}Symphonie@{UB} stops song if
		played at freqs higher than your cpu allows. (no more sound
		distortion)
		-> Any version below 2.3c should no longer be used
		Runs on A1200/4MB      12 Channels at ca. 18 kHz
			A4000/EC030-25 12 Channels at ca. 30 kHz
			A4000/040-25   12 Channels at ca. 40 kHz
			A1200/030-50   12 Channels at ca. 41 kHz

V2.3		Internal Syncsystem COMPLETELY rewritten !!
		(no longer using cia timers)
		@{B}Symphonie@{UB} can now open on WB (simply cancel screenrequester)
		NEW: If you load a song/mod @{B}Symphonie@{UB} switches DSP off

V2.2		NEW: Much better Quality (@{B}Symphonie@{UB} @{I}Pro@{UI} and @{I}Jr@{UI})
		NEW: Change Sample;
		NEW: New Song, Quit protected

V2.11a		NEW: @{B}Symphonie@{UB} reports samplename/number of missing samples,
		     GURU FIXED
		NEW: Delta Packer/Rearranger algorithm for 16 Bit Samples,
		     too !
		     - only processed on 16 Bit Samples
		     - Ratios: Before 2-5% on 16 Bit SymMODs (lha), now you get
		       20%-30% (average) on 16 Bit SymMODs (lha)
		     - non destructive algorithm (World 1st known product
		       to do this)

V2.10c		NEW: @{B}Symphonie@{UB} can now load XPK packed samples
		multipack support (e.g. 3x DLTA + 2x SHRI + 5x NUKE !)
		FIXED:	Some Knacks in ViRT Sample Processor (@{B}Symphonie@{UB} @{I}Pro@{UI})
		FIXED:	Some Sampleautomaximize problems ViRTSP
		        (@{B}Symphonie@{UB} @{I}Pro@{UI})
		Global Noisefilter changed to IPFilter (until a real NF is
		implemented)
		NEW FX: Sequencer: CV, Channel Vol/VFade/VFadeTo
		preimplemented (sequencer controlled mixer for every channel/
		Mischpultautomation).
		Negativ values result in 180° phase shift (@{B}Symphonie@{UB} @{I}Pro@{UI} only
		implemented, yet)
		Now there are 3(!) sequencer controlled Volume LFOs per
		channel:
		LFO Level 1: Sequencer (VSlide/SetVol)
		LFO Level 2: Channel Tremolo (Tremolo)
		LFO Level 3: Channel Mixer Volume (CV)
		   (Level 4: System Volume)

V2.10b		FIXED:	 SAMPLEBOOST>100% didn't work in @{B}Symphonie@{UB} @{I}Pro@{UI}
			 (2.10 Plays 15Bit Sound, 2.10b Plays 16Bit Sound)
		FIXED:	 Knack in LPFilter
		FIXED:	 Wrong "About" text in @{B}Symphonie@{UB} @{I}Pro@{UI}
		REMOVED: Nasty Colorflash
		HQ Mode implemented (more exact calculation, 50% slower)
		(@{B}Symphonie@{UB} @{I}Pro@{UI} only)

V2.10		NEW: DSP FX: Hall, CrossHall, CrossDelay
			     Delay LPFilter/Hall LPFilter

V2.04 		NEW: System Buffer gets automaximized if the Buffer number is
		     set too high
		NEW: NEW DSP FX: CrossEcho2, CenterEcho (beta)
		NEW: @{B}Symphonie@{UB} can now load MAUD(IFF) Samples
		     (8,16,Mono,Stereo)
		First @{B}Symphonie@{UB} @{I}Pro@{UI} (100% 16 Bit Program)
		@{B}Symphonie@{UB} @{I}Pro@{UI} is about 30%-40% slower than @{B}Symphonie@{UB} @{I}Jr@{UI}
		@{B}Symphonie@{UB} @{I}Pro@{UI} needs double the memory of @{B}Symphonie@{UB} @{I}Jr@{UI}
		(16 Bit Samples)

V2.03 		NEW: DSP LP Filter for DSP Echo/CrossEcho

V2.02    	NEW: @{B}Symphonie@{UB} can now load Maestro 16Bit Mono/Stereo Samples
		NEW: @{B}Symphonie@{UB} can now load Wave 16Bit Mono/Stereo Samples

V2.01 beta	FIXED: Spectrum , SamplePosPtr
		FIXED: Probs with large Patterns
		NEW: Undo can now undo Undo (-)
		NEW: Bpm expanded to Max 600Bpm
		NEW: Noise Limiter Implemented (Prefs/)
		NEW: Menu:Flag Autowindow to Front (if window gets activated)
		NEW: Sample Volume above 100% now correctly implemented.
		     Non destructive compressor
		FIXED: Note Delete/Insert Fixed
		NEW: Assist reports a "End of Sequence/Song"
		NEW: Surround Left/Right expanded to 9Bit (50% less noise)
		FIXED: Prefs:Force Update (no clock running ...)
		BUG REMOVED: (Guru at End of Song) detected and Fixed
		NEW: a lot of Info/Error Msgs redirected to use Assist as
		     Output instead of using nasty OK-requests
		NEW: @{B}Symphonie@{UB} prepared(!) for 16Bit Samples
		NEW: NoteEd now displays values as they act.
		     (e.g. Old: VibratoDepth 128 ==> NEW: VibratoDepth 50.0 %)

V2.0 beta	Assist implemented (Online Information)
		Prefs save/load
		Move Menu implemented
		Prepacker extented for better prepacking
		"PitchSlideTo" FX implemented, 
		"ShiftEmphasis" FX implemented, 
		"ReTrig" FX implemented, 

V1.5		DSP Delay implemented (Echo & Delay result in complex Hall )
		NEW: @{B}Symphonie@{UB} can now perform Echo, Delay and Chorus
		     in serial
		Scope 1.0 implemented (for visuel sound analysis )
		Prepacker implemented 
		-> extern compressors are now 100%-1000% faster and may
		   perform better ratios
		NEW: Prefs/Realtime/Force Update
		NEW: Prefs/Realtime/Scope
		NEW: DSP Control GUI (inside System Window)
		NEW: Sample boost extended from max 100% to max 200%

V1.4		Sequence structure fully implemented
		"SampVib" FX implemented, can do a vibrato like effect in
		the sense of sample (just rotates the samplebegin pointer)
		Screenmode.requester: minimal screensize set to 320x200
		for users without vga/multisync monitors
		Oversampling 9Bit now is error free (no knacks)
		now using audio.device to allocate channels
		(no audio conflicts)
		VBR problem fixed (now using setvector to allocate
		interrupt)
		OS problems removed
		DSP chorus implemented for testing purpose (very buggy
		and noisy)
		DSP ready to have DELAY implemented
		DSP system ready to handle multiple effects:
		STEREO CONTROL implemented:
		- user can now expand the stereo base
		- user can now also set a pitch offset between left and
		  right channel
		BLOCK commands fully implemented and bug-fixed

V1.3a		Channel mixing algorithm rewritten and expanded to 16BIT
		Channel mixing is now ready for AHI System
		Channel mixing now has FASTMEM BUFFERING implemented
		-> users with FASTMEM get an extra bonus of 10% to 100%
		   depending on their "CPU to FASTMEM" speed.
		   @{B}Symphonie@{UB} can now run at up to 250 kHz mixrate !!!
		   (if you are able to handle high monitor freqs)
		GUI handler expanded to handle more object classes
		GUI is font sensitive
		DSP rewritten and expanded for sequenced control
		NEW FX: "PitchAdd", "VolumeAdd", "SetDSP", "Tremolo"
			"Vibrato"
		Note Editor rewritten, is now object aware

V1.x		Sample Preprocessor is fully 16Bit
		Sample tune range expanded to -/+24 halftones (4 octaves)
		Antiknack algorithm rewritten (now does a 32 sample vfade)
		NEW FX: "FromAdd", "FromSet", "SetSpeed"
		Multiwindow handler implemented

V1.058		Less knacks
		No more sync problems
		*.WAV autoconvert algorithm

V1.057 		Screenmode requester
		Oversampling

V1.055		Autoloop

V1.054		Macro

V1.053		Module/Extract Samples

V1.04		IPOL Filter
		Position Transpose

V1.01		ViRT Samples

V0.01 June 93	First Test Code

@ENDNODE


@NODE ToDo "Things to do..."
@TOC Main
@{U}                                                                             @{UU}

                                   To do...
@{U}                                                                             @{UU}

	- Improve stability
	- Midi
	- GUI

@ENDNODE


@NODE Projects "Projects Designs."
@TOC Main
@{U}                                                                             @{UU}

                  The following goodies are project designs:
@{U}                                                                             @{UU}


- AuralSpace 3D Sound ----------------------------------------------------
--------------------------------------------------------------------------

  Audio Output on 4 seperate channels/max 6-7 Speakers for real 3D Sound
  (No pseudo 3D Sound like Dolby Prologic Surround (tm) Sound).
 
  Hardware needed:
  - e.g. 2x Standard 16 Bit Soundcards (perfectly synced)
  - e.g. 1x Soundcard + 1x Amiga Internal Sound (synced)
  - e.g. 1x Soundcard with 4 Channels (2x Stereo Out)

  @{B}Symphonie@{UB} always generates 3D Sound with free instrument positioning.
  (X/Y/Z axis)
  3D Mixer with real 3D fades, twirls ... :).


  Speaker arrangement:

  * = 1x Speaker
  O = 1x Subwoofer

  2D RealSpace Sound - 4 Seperate Speakers (Two Amplifiers)
  ------------------ 
   
  *--O--*      L1 - Front - R1
 
                      () 
 
  *--O--*      L2 - Back  - R2

  - 6 speakers possible (4 x standard, 2 x Subwoofers)


  3D AuralSpace Sound - 4 Seperate Speakers (Two Amplifiers)
  -------------------       
    
  *----O----*  L1 - Front/Bottom - R1      
   \ .   . /                     
    \  *  /          Center Top         
     \ O./ 
      \*/            Back,Bottom


  tetraeder speaker positioning, performing real 3D sound
  6 speakers possible (4 x standard, 2 x Subwoofers)



  Dolby Prologic (tm) Sound - 5 Speakers (1x Amplifier)
  ------------------------- 
  (Possibly non realtime Prologic Surround Sound Encoding)
  
  *--O--*      L1 - Center - R1
 
                      () 
 
  *-----*      L2    Back    R2








-  Next @{B}Symphonie@{UB} --------------------------------------------------------
--------------------------------------------------------------------------

  - AudioMixer : 16/24 Bit, 24 Bit SoundStream (minimal)
  - Audiorendering 8/16/24/32 Bit (Highend StudioQuality)
  - AuralSpace 3D Sound (Real 3D Sound using 4 Speakers as Output )
  - PowerPC/Alpha Native MixerSystem/Dsp System
  - Dual Processor Support (Async multiprocessing)
    e.g. 1x 040 + 1x PowerPC
    e.g. 1x 060 + 1x Alpha




- AHI Support ------------------------------------------------------------
--------------------------------------------------------------------------

- This project is a theoretical possibility.


  Possible construction:

                                      
------------     ---------------     -------------------     ------------
@{B}Symphonie@{UB} Ed     @{B}Symphonie@{UB} Mixer     @{B}Symphonie@{UB} @{I}Pro@{UI}cessor     ahi System
             --\                 --\                     --\ or
             --/ generates       --/ DSP, Oversampler    --/ Render Unit
                 16/32/64 bit.
                                                             or ahi Mixer
------------     ---------------     -------------------     ------------

                              /\
                              ||
                              ||
                              \/

                     ---------------------------
                     "Synth" Emulator

                     Emulates Types of Synthesis
                     ---------------------------


Thanks to Martin Blom for the great ahi System.

@ENDNODE


@NODE Ordering "How to order Symphonie"
@TOC Main


@{B}Symphonie@{UB} Ordering:


        -------------------------------------------------------------------------
        H O T   S U M M E R    D I S C O U N T   valid till August 97
        -------------------------------------------------------------------------

        @{B}Symphonie@{UB} Pro ACADEMIC                                  35 USD / 60 DM
        @{B}Symphonie@{UB} Pro                                           70 USD / 120 DM

        -------------------------------------------------------------------------
        H O T   S U M M E R    D I S C O U N T   valid till August 97
        -------------------------------------------------------------------------



        Product Type                                            Price / Preis(*)
        ------------                                            -------------
        FREE @{B}Symphonie@{UB} from internet                            free
        FREE @{B}Symphonie@{UB}                                          10 USD / 20 DM

        @{B}Symphonie@{UB} Pro ACADEMIC                                  60 USD / 110 DM
        @{B}Symphonie@{UB} Pro ACADEMIC & @{"Sound FX" link "AboutSFX"}                      83 USD / 150 DM
        @{B}Symphonie@{UB} Pro ACADEMIC for MacOS                       100 USD / 180 DM (planned)

        @{B}Symphonie@{UB} Pro                                          300 USD / 550 DM
        @{B}Symphonie@{UB} Pro & @{"Sound FX" link "AboutSFX"}                              323 USD / 580 DM
        @{B}Symphonie@{UB} Pro for MacOS                                400 USD / 700 DM (planned)

        @{B}Symphonie@{UB} FOR ENTERPRISEs                              (ask for special pricing)
        @{B}Symphonie@{UB} FOR USERGROUPS                               (ask for special pricing)

        (*) Minimal amount !


        Shipping Tax / Liefergebühren
        -----------------------------
        P&P                                                     10 USD / 20 DM

        Express Service                                 add     10 USD / 18 DM
        Nachname Service (you pay the postman)          add     10 USD / 18 DM (western europe only)
        If you send a cheque please                     add     10 USD / 18 DM (billing tax)


        - Cash in USD and western european currencies accepted
        - Postal Moneyorder accepted
        - @{"International Moneyorder" link "IntMO"} accepted.
        - Mailing via UPS possible. (Ask at UPS for shipping Tax)
        - Import taxes vary for different countries


        People from outside Europe ask at their PO/Bank for shipping/paying possibilities.


        NOTE: A cheap, very fast and safe way to get @{B}Symphonie@{UB} is to use
              POSTAL MONEYORDER. I recommend you use this way of ordering


Produkt Information:



        --------------------------------------------------------------
        @{B}Symphonie@{UB} Pro :           300 USD   (Out for Sale, NOW !)
        --------------------------------------------------------------
        (includes @{B}Symphonie@{UB} Jr)

        - 8...256 Soundchannels

        - 16 Bit Sample Preprocessor
        - 16/16 Bit Mixer

        - Audio OUT :  9Bit Stereo Amiga
                      14Bit Stereo Amiga
                      16Bit Digital Stereo (Audio Rendering)

                      16Bit AHI (planned)

        - Audio Rendering (for HDR, MC/LP/CD Production, DAT, Postmixing, Syncronisation ...)

            Modes  : 8/16 Bit
                     Mono/Stereo/L/R
                     Little Endian/Big Endian

            Format : Maestro (Samplitude support)
                     MAUD (16 Bit iff) by Macrosystem
                     Wave (PC) by Microsoft Inc.
                     Raw

            Multichannel possibility (Mute Samples/Tracks/Dsp)

            Max 16x Pre Oversampling (Sample Preprocessor)

        - Printed manuals are no longer planned
          A HTML version of the guide is planned instead





        SPECIAL PRICING CONDITIONS -----------------------------------
        --------------------------------------------------------------



        --------------------------------------------------------------
        @{B}Symphonie@{UB} Pro ACADEMIC:   60  USD   (Out for Sale, NOW !)
        --------------------------------------------------------------
        (includes @{B}Symphonie@{UB} Jr)

        - for non commercial purpose like :
        
          * private home use
          * educational use at schools/ universities
          * experimental purpose (no money earning purpose)
          * freeware projects (freeware games, demos & other software)
          * Authors of commercial Amiga Software also get this special discount
          
          if you spread you modules, but suddenly start gaining
          money for your work, you have to upgrade to the non academic release
          of course.



        --------------------------------------------------------------
        @{B}Symphonie@{UB} & @{"SFX" link "AboutSFX"}         ADD 23 USD   (Out for Sale)
        --------------------------------------------------------------
        - Includes @{"SFX" link "AboutSFX"} (Digital Sound Processor)
          by Stefan Kost
          (for Sample Editing, Dsp fX and Sample Conversion)




        ------------------------------------------------
        @{B}Symphonie@{UB} for USERGROUPs
        ------------------------------------------------
        - at least 2 people
        - Ask for Special Pricing


        ------------------------------------------------
        @{B}Symphonie@{UB} for ENTERPRISEs
        ------------------------------------------------
        - 1x FULL SYMPHONIE PRO + MULTIUSER LICENCE
        - Ask for Special Pricing



Ordering is possible ONLY at:

        RealTime Software

        Patrick Meng
        Rosenfeldweg 4
        CH-6048 Horw
        Switzerland


@ENDNODE



@NODE MusicMarco "Music by Marco Ege."
@TOC Main

                           Interested in Music ?
                 ----------------------------------------
                 (GameSound, Multimedia, Audio Tracks...)




                        --------------------------
                        CD 1 : 2nd World : OUT NOW
                        --------------------------

                            35.00 SFr inkl P&P
                           Progressive / Trance
                             12 Tracks, 67:18
                       All Tracks designed in 16Bit
                             Independent Label


                              ---------------
                              CD 2 : Out SOON
                              ---------------


                              Send orders to:

                                 Marco Ege
                              Rigiblickweg 5
                                 6048 Horw
                                Switzerland

                        Or E-Mail via pmeng@vtx.ch

@ENDNODE

@NODE AboutSFX "About SoundFX"
@TOC Main

  SoundFX (C) Copyright 1993-1997 Stefan Kost
  All Rights Reserved

  Contact:

  Stefan Kost
  Holbeinstrasse 1
  04229 Leipzig
  Germany

  Stadt- und Kreissparkasse Leipzig
  BLZ: 860 555 92
  KTO: 1867809822

  e-mail : kost@imn.th-leipzig.de
  phone  : Germany (0341) 4801589

  A Demo of SoundFX is available at AMINET/mus/edit/SFX*

@ENDNODE
