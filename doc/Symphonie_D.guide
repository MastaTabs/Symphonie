@database "Symphonie - Help.guide"
@Node MAIN "Symphonie Help Manual"

Willkommen zu @{B}Symphonie@{UB} 2.4h

 
  @{" Einführung " link "MengMenu"}	  Ueber @{B}Symphonie@{UB} ?
  @{" Bestellung " link "Ordering"}	  Ich will @{B}Symphonie@{UB} !!

  @{" Qualität " link "QualitätMenu"}	  über Amiga Soundqualität
  @{" Internes " link "InternSymMenu"}	  Innereien von @{B}Symphonie@{UB}

  @{" Helpmenu " link "HelpMenu"}	  Hilfe ! Gadgets, Menus, Tastatur ...

  @{" History  " link "History"}	  Entwicklungsgeschichte von @{B}Symphonie@{UB}...

  -------------------------------------------------------------------

  @{" Musik " link "ModMenu"}		Modules, Audio tracks...

  @{" Möglichkeiten  " link "SymphExtra"}	von @{B}Symphonie@{UB} ...
  @{" Copyright" link "RightMenu"}		Rechte


  Bitte zuerst readme.txt lesen !

@endnode

; $VER: SymphonieGuide 2.4h

@node "ModMenu" "Music"
@toc "MAIN"
Interested in Music ?
------------------------------------------------------------
(GameSound, Multimedia, Audio Tracks...)

Ask at:

Marco Ege
Rigiblickweg 5
6048 Horw
Switzerland






----------------------------------------------------
CD 1 : 2nd World : OUT NOW
----------------------------------------------------

- 35.00 SFr inkl P&P
- Progressive / Trance
  (12 Tracks,  67:18)
- All Tracks designed in 16Bit
- Independent Label


----------------------------------------------------
CD 2 : Out NOW
----------------------------------------------------


Send orders to:

Marco Ege
Rigiblickweg 5
6048 Horw
Switzerland

eMail via pmeng@vtx.ch
----------------------------------------------------
@endnode

@node "History" "Program History"
@toc "MAIN"
	@{B}Symphonie@{UB} Jr/Pro NEW Features ---------------------------------------------------
        ---------------------------------------------------------------------------------

        Version 2.4f - Release 9

        NEW Dsp Fx: CenterEcho/MidEcho
        Symphonie now directly loads XPK packed modules
        Symphonie can be started from Shell
        OS requesters appear on the Symphonie screen (-> gfx card users)
        PT converter v2.0 (poslist is converted, too)
       
        ---------------------------------------------------------------------------------


       NEW EMAIL ADRESS:        pmeng@vtx.ch


                                 




	Symphonie Jr/Pro History --------------------------------------------------------
        ---------------------------------------------------------------------------------

	V0.01	June 93		First Test Code

	V1.01			ViRT Samples
	V1.04			IPOL Filter
				Position Transpose
	V1.053			Module/Extract Samples
	V1.054			Macro
	V1.055			Autoloop
	V1.057 			Screenmode requester
				Oversampling

	V1.058			less knacks
				nomore sync problems
				*.WAV autoconvert algorithm

	V1.x			Sample Preprocessor is fully 16Bit
				Sample tune range expanded to -/+24 halftones (4 octaves)
				Antiknack algorithm rewritten (now does a 32 sample vfade)
				NEW FX: "FromAdd", "FromSet", "SetSpeed"
				Multiwindow handler implemented

	V1.3a			channel mixing algorithm rewritten and expanded to 16BIT
				channel mixing is now ready for AHI
				channel mixing now has FASTMEM BUFFERING implemented
				-> users with FASTMEM get an extra bonus of 10% to 100% depending
				   on their "CPU to FASTMEM" speed
				   Symphonie can now run at up to 250 kHz mixrate !!!
				   (if you are able to handle high monitor freqs)

				GUI handler expanded to handle more object classes
				GUI is font sensitive

				DSP rewritten and expanded for sequenced control

				NEW FX: "PitchAdd", "VolumeAdd", "SetDSP", "Tremolo"
				        "Vibrato"

				Note Editor rewritten, is now object aware
				

	V1.4			Sequence structure fully implemented

				"SampVib" FX implemented, can do a vibrato like effect in
				the sense of sample (just rotates the samplebegin pointer)

				Screenmode.requester: minimal screensize set to 320x200
				for users without vga/multisync monitors
				Oversampling 9Bit now is error free (no knacks)
				now using audio.device to allocate channels (no audio conflicts)
				VBR problem fixed (now using setvector to allocate interrupt)
				OS problems removed

				
				DSP chorus implemented for testing purpose (very buggy and noisy)
				DSP ready to have DELAY implemented

				DSP system ready to handle multiple effects:



				STEREO CONTROL implemented:
				user can now expand the stereo base
				user can now also set a pitch offset between left and right channel

				BLOCK commands fully implemented and bug-fixed


	V1.5			DSP Delay implemented (Echo & Delay result in complex Hall )
                                NEW: Symphonie can now perform Echo, Delay and Chorus in serial
				Scope 1.0 implemented (for visuel sound analysis )
				Prepacker implemented 
                                -> extern compressors are now 100%-1000% faster and may perform
                                   better ratios

				NEW: Prefs/Realtime/Force Update
				NEW: Prefs/Realtime/Scope

				NEW: DSP Control GUI (inside System Window)
				NEW: Sample boost extended from max 100% to max 200%

        ---------------------------------------------------------------------------------
        V2.0 beta		Assist implemented (Online Information)
				Prefs save/load
				Move Menu implemented
				Prepacker extented for better prepacking
				"PitchSlideTo" FX implemented, 
				"ShiftEmphasis" FX implemented, 
				"ReTrig" FX implemented, 

	V2.01 beta		FIXED: Spectrum , SamplePosPtr
				FIXED: Probs with large Patterns
				NEW: Undo can now undo Undo (-)
				NEW: Bpm expanded to Max 600Bpm
				NEW: Noise Limiter Implemented (Prefs/)
				NEW: Menu:Flag Autowindow to Front (if window gets activated)
				NEW: Sample Volume above 100% now correctly implemented. Non destructive compressor
				FIXED: Note Delete/Insert Fixed
				NEW: Assist reports a "End of Sequence/Song"
				NEW: Surround Left/Right expanded to 9Bit (50% less noise)
				FIXED: Prefs:Force Update (no clock running ...)
				BUG REMOVED: (Guru at End of Song) detected and Fixed
				NEW: a lot of Info/Error Msgs redirected to use Assist as Output
		  		    instead of using nasty OK-requests
				NEW: Symphonie prepared(!) for 16Bit Samples
				NEW: NoteEd now displays values as they act.
                                     (e.g. Old: VibratoDepth 128 ==> NEW: VibratoDepth 50.0 %)

	V2.02    		NEW: Symphonie can now load Maestro 16Bit Mono/Stereo Samples
				NEW: Symphonie can now load Wave(PC) 16Bit Mono/Stereo Samples

	V2.03 			NEW: DSP LP Filter for DSP Echo/CrossEcho

	V2.04 			NEW: System Buffer gets automaximized if the Buffer number is
                                     set too high
                                NEW: NEW DSP FX: CrossEcho2, CenterEcho (beta)


				NEW: Symphonie can now load MAUD(IFF) Samples (8,16,Mono,Stereo)


				First Symphonie Pro (100% 16 Bit Program)
				Symphonie Pro is about 30%-40% slower than Symphonie Jr
				Symphonie Pro needs double the memory of Symphonie Jr (16 Bit Samples)

	V2.10			NEW: DSP FX      Hall, CrossHall, CrossDelay
                                                 Delay LPFilter/Hall LPFilter


	V2.10b			FIXED:	SAMPLEBOOST>100% didn't work in Symphonie Pro
                                        (2.10 Plays 15Bit Sound, 2.10b Plays 16Bit Sound)

				FIXED:	 Knack in LPFilter
				FIXED:	 Wrong "About" text in Symphonie Pro
				REMOVED: Nasty Colorflash

				HQ Mode implemented (more exact calculation, 50% slower) ; Pro only

	V2.10c			NEW: Symphonie can now load XPK packed samples
				multipack support (e.g. 3x DLTA + 2x SHRI + 5x NUKE !)


				FIXED:	Some Knacks in ViRT Sample Processor (Symphonie Pro)
				FIXED:	Some Sampleautomaximize problems ViRTSP (Symphonie Pro)

				Global Noisefilter changed to IPFilter (until a real NF is implemented)

				NEW FX: Sequencer: CV, Channel Vol/VFade/VFadeTo preimplemented

       				        (sequencer controlled mixer for every channel/Mischpultautomation)
                                        Negativ values result in 180° phase shift (Pro Only implemented, yet)

                                        Now there are 3(!) sequencer controlled Volume LFOs per channel:

					LFO Level 1: Sequencer (VSlide/SetVol)
					LFO Level 2: Channel Tremolo (Tremolo)
					LFO Level 3: Channel Mixer Volume (CV)
					(Level 4: System Volume)

	V2.11a			NEW: Symphonie reports samplename/number of missing samples, GURU FIXED
				NEW: Delta Packer/Rearranger algorithm for 16 Bit Samples, too !
                                        - only processed on 16 Bit Samples
                                        - Ratios: Before: 2-5% on 16 Bit Mods (lha)
                                                  Now:    You get 20%-30% (average) on 16 Bit Mods (lha)
                                        - non destructive algorithm (World 1st known product to do this)

	V2.2			NEW: Much better Quality (Symphonie Pro and Jr)
                                NEW: Change Sample;
                                NEW: New Song, Quit protected

	V2.3			Internal Syncsystem COMPLETELY rewritten !!
				(no longer using cia timers)
                                Symphonie can now open on WB (simply cancel screenrequester)
				NEW: If you load a song/mod Symphonie switches DSP off

       V2.3c                    Guide corrected and improved. Guide Updated.
				Soundprocessing is done in Softint (pri 0)
				Audiomodes Left/Right Surr changed to Mono Left/ Mono Right
				CPU overload check implemented: Symphonie stops song if played
				at freqs higher than your cpu allows. (no more sound distortion)
				-> Any version below 2.3c should no longer be used
				
				Runs on A1200/4MB      12 Channels at ca. 18 kHz
				        A4000/EC030-25 12 Channels at ca. 30 kHz
				        A4000/040-25   12 Channels at ca. 40 kHz
				        A1200/030-50   12 Channels at ca. 41 kHz

       V2.3d                    Small bugs fixed
                                Sample Import/Export Removed (obsolete)
                                Extract as 8 Bit working for Waves and Maestro Samples

       V2.3e                    Small Bugs fixed in PattEd (Optical Display)
                                NEW: More Pricing Possibilites
                                NEW: Extract Quality

       V2.4                     NEW: MasterVolume
                                NEW: Balance
                                SampleLoader modified (higher compatibility)

       V2.4b                    Major Bug detected in release 2.4 and fixed (Guru fixed)
                                8svx loader modified (Stereo sample detection fixed)
      
       V2.4b rel 2              Small Loop modifications, 8svx loader modified.

       V2.4c rel 1              Old Loopsystem improved for better Looping (SymPro)
                                Antiknack (Anticlicking) rewritten
                                New Loopsystem fully implemented
                                Loopsystem: beta release (clicks with 100% Loops)

       V2.4d rel 1              Dsp Plug In System implemented
                                Anticlicking improved

       v2.4d rel 2              New Loopsystem fully implemented (Final)

                                DSP System v1.0 fully implemented
                                - Now we have an instrument based DSP, no longer
                                  global DSP on all channels !!

       v2.4e                    Dsp PlugIn : Bug fixed in Dsp GUI (Double Zeros for Strings)
                                Gui Prefs
                                New Gui Possibilities
                                Quick Prefs (GUI, Paths, Screenmode)
                                Sampleboost now included into Songs
                                Audio Rendering is much faster (to HD or to ZIP by iomega)

       v2.4e rel 2              Sample Mixer: Clicks removed appearing at end of Samples
                                AntiClick System improved
                                Realtime DeClicking System rewritten

       v2.4f rel 1              AIFF Sample Format support (MAC Samples)
             rel 3              SampleLoader now shows some info about the Sampleformat
                                WAV AutoConverting Unit modified
                                Transwave Synthesis fully implemented for Symphonie Jr

       v2.4f rel 4,5            Faster GFX, ColorOrgan
       v2.4f rel 6              Cache handling modified, PT loader (beta)

       v2.4f rel 7              Memory Protection System improved
                                1x Memory violation fixed

                                 Realtime Declicking System implemented for |>>|
                                 instruments, too.
                                 
                                 PT module loader/converter(v1.0) final:                                 

                                 - loads PT "M.K. 31Sample/64Pattern" MOD format
                                 - samples are saved to t:
                                 - songstructure is interpreted
                                 - KeyOn, SetVol events are converted
                                 - Instruments/Poslist is not yet converted
                                   (XM converter module, soon)

       v2.4f rel 9               Symphonie now directly loads XPK packed modules
                                 Symphonie can be started from shell
                                 OS requesters appear on the Symphonie screen (-> gfx card users)
                                 PT converter v2.0 (poslist is converted, too)
@endnode


@node "RightMenu" "Copyright"
@toc "MAIN"
  Symphonie (C) by Patrick Meng 1993-97 - all rights reserved
  Symphonie File Format (C) by Patrick Meng 1993-97 - all rights reserved

  Trying to decode Symphonie or the Symphonie File Format
  is strictly prohibited.

  ------------------------------------------------------------------------
  Symphonie Player is FREEWARE. (FD Player)
  Symphonie Player Pro is FREEWARE. (FD Player)
  ------------------------------------------------------------------------
  FREE Symphonie is almost FD (C) by Patrick Meng (not for commercial use)
  Symphonie SHARE is NO FD, NO FREEWARE,  (C) by Patrick Meng 
  Symphonie SE (C) by Patrick Meng (Publishers may ask for Permission)
  Symphonie Jr (C) by Patrick Meng 
  Symphonie Pro (C) by Patrick Meng
  Symphonie.guide (C) by Patrick Meng
  ------------------------------------------------------------------------


  ------------------------------------------------------------------------
  Symphonie SE has been licenced to:
  ------------------------------------------------------------------------
  
  Aminet Organisation            (Aminet CD 12         )
  Amiga User Group Switzerland   (Clubdisk June/July 96)
  ------------------------------------------------------------------------

  Do ONLY use originals otherwise you will be in trouble
  ------------------------------------------------------------------------




  SoundFX (C) Copyright 1993-1997 Stefan Kost
  All Rights Reserved
  ------------------------------------------------------------------------

  Do ONLY use originals otherwise you will be in trouble
  ------------------------------------------------------------------------
@endnode

@node "SFXInfo" "Ueber SFX"
@toc "MAIN"
  SoundFX (C) Copyright 1993-1997 Stefan Kost
  All Rights Reserved

  Contact:

  Stefan Kost
  Holbeinstrasse 1
  04229 Leipzig
  Germany

  Stadt- und Kreissparkasse Leipzig
  BLZ: 860 555 92
  KTO: 1867809822

  e-mail : kost@imn.th-leipzig.de
  phone  : Germany (0341) 4801589

  A Demo of SoundFX is available at AMINET/mus/edit/SFX*
@endnode

@node "SymphExtra" "Symphonie projects"
@toc "MAIN"

  The following goodies are project designs:


  - AuralSpace 3D Sound ------------------------------------------------------
  ----------------------------------------------------------------------------

  - Audio Output on 4 seperate channels/max 6-7 Speakers for real 3D Sound
    (No pseudo 3D Sound like Dolby Prologic Surround (tm) Sound)
 
  Hardware needed:
  - e.g. 2x Standard 16 Bit Soundcards (perfectly synced)
  - e.g. 1x Soundcard + 1x Amiga Internal Sound (synced)
  - e.g. 1x Soundcard with 4 Channels (2x Stereo Out)

  @{B}Symphonie@{UB} always generates 3D Sound with free instrument positioning (X/Y/Z axis)
  3D Mixer with real 3D fades, twirls ... :)


  - Speaker arrangement:

  * = 1x Speaker
  O = 1x Subwoofer

  2D RealSpace Sound - 4 Seperate Speakers (Two Amplifiers)
  ------------------ 
   
  *--O--*      L1 - Front - R1
 
                      () 
 
  *--O--*      L2 - Back  - R2

  - 6 speakers possible (4 x standard, 2 x Subwoofers)


  3D AuralSpace Sound - 4 Seperate Speakers (Two Amplifiers)
  -------------------       
    
  *----O----*  L1 - Front/Bottom - R1      
   \ .   . /                     
    \  *  /          Center Top         
     \ O./ 
      \*/            Back,Bottom


  - tetraeder speaker positioning, performing real 3D sound
  - 6 speakers possible (4 x standard, 2 x Subwoofers)



  Dolby Prologic (tm) Sound - 5 Speakers (1x Amplifier)
  ------------------------- 
  (Possibly non realtime Prologic Surround Sound Encoding)
  
  *--O--*      L1 - Center - R1
 
                      () 
 
  *-----*      L2    Back    R2





  neXt @{B}Symphonie@{UB} -------------------------------------------------------------
  ----------------------------------------------------------------------------

  - AudioMixer : 16/24 Bit, 24 Bit SoundStream (minimal)
  - Audiorendering 8/16/24/32 Bit (Highend StudioQuality)
  - AuralSpace 3D Sound (Real 3D Sound using 4 Speakers as Output )
  - PowerPC/Alpha Native MixerSystem/Dsp System
  - Dual Processor Support (Async multiprocessing)
    e.g. 1x 040 + 1x PowerPC
    e.g. 1x 060 + 1x Alpha


  - AHI Support --------------------------------------------------------------
  ----------------------------------------------------------------------------

  - Dieses Projekt ist eine theoretische Möglichkeit.


  Möglicher Aufbau:

                                      
--------------       -----------------------       --------------------       -----------
@{B}Symphonie@{UB} Ed         @{B}Symphonie@{UB} Mixer               @{B}Symphonie@{UB} Processor        ahi System

               ---\                           ---\                      ---\  or
               ---/  generates 16/32/64Bit    ---/ DSP, Oversampler     ---/  Render Unit
                     Data.
                                          
                     or ahi Mixer
--------------       -----------------------       --------------------       -----------
                                                                              
                              /\                                             
                              ||                                       
                              ||
                              \/

                     ---------------------------
                     "Synth" Emulator

                     Emulates Types of Synthesis
                     ---------------------------


Thanks to Martin Blom for the great ahi System.
@endnode

@node "MengMenu" "Warum, Wo erhältlich ..."
@toc "MAIN"

@{B}Symphonie@{UB} ist ein Produkt mit neuartigen Audio Routinen, die es
ermöglichen soll hochwertige Musik zu komponieren.
Auch fuer Games und andere Musikanwendungen.
Vorhandene Audio Hardware kann via Audio Rendering
unterstützt werden. (Bsp: 16 Bit Soundkarten )

Alle mit @{B}Symphonie@{UB} geschriebenen Musikmodule lassen sich
in @{B}Symphonie@{UB} an die jeweils vorhandene (Audio-) Hardware
anpassen (Samplingrate, CPU Speed).


@{B}Symphonie@{UB} arbeitet 100% "non destruktiv"

	Alle Samplemanipulationen wirken sich nicht auf das
        Originalmaterial aus !

        Samples werden in Modulen so gespeichert, wie sie der Komponist
        auf seiner HD hat (unkonvertiert, ohne Manipulationen)

        Die obigen Systemeigenschaften wirken sich folgendermassen aus:
        --------------------------------------------------------------

        @{B}Symphonie@{UB} Module sind 100% hardwareunabhängig

        @{B}Symphonie@{UB} ermöglicht DDD Produktionen (voll digitale Produktionen mit minimalen Verlusten
	 auf dem Signalweg )

        Beispiel: Verarbeitung mit @{B}Symphonie@{UB} xy (non destruktiv)
                  Exportieren ("non realtime" Audio Rendering, 16 Bit, 48 kHz)
                  Nachbearbeitung mit gängiger HD Recording Software

        @{B}Symphonie@{UB} Module könnten auf "beliebige" Hardwareplatformen skaliert werden.

        Software Updates könnten die Klangqualität von schon existierenden Modulen 
        nachträglich steigern (falls entsprechende Hardware vorhanden ist)

        Wenn ein Soundmodul mit 16 Bit Samples mit 8Bit @{B}Symphonie@{UB} (Jr) komponiert wird,
        so tönt es auf einem 16 Bit @{B}Symphonie@{UB} so, als ob das Modul mit 16 Bit komponiert
        worden wäre ! 



@{B}Symphonie@{UB} Hardwarevoraussetzungen:

	CPU 680EC20 oder besser
        4 MB Memory

@{B}Symphonie@{UB} Softwarevoraussetzungen:

        OS 3.0 oder höher
        reqtools.library (by Nico Francois, im libs: Verzeichnis)
                             & Magnus Holmgren

Empfohlen wird zudem:

        CPU 030/50Mhz oder besser
        Harddisk
        
        @{B}Symphonie@{UB} Jr  : 16 MB Fastmem oder besser
        @{B}Symphonie@{UB} Pro : 32 MB Fastmem oder besser







Zukünftige Entwicklungsschwerpunkte:

    * Betriebssicherheit
    * Midi
    * AHI
    * GUI
    * HTML Anleitung


Änderungen vorbehalten ...

--------------------------------------------------------------

Available at:


  RealTime Software

  Patrick Meng
  Rosenfeldweg 4
  6048 Horw
  Switzerland

  +41 41 340 6948


  NEW EMAIL:  pmeng@vtx.ch
@endnode


@NODE Ordering "Bestellung von Symphonie"
@TOC Main

@{B}Symphonie@{UB} Bestellung:


        -------------------------------------------------------------------------
        H O T   S U M M E R    D I S C O U N T   valid till August 97
        -------------------------------------------------------------------------

        @{B}Symphonie@{UB} Pro ACADEMIC                                  35 USD / 60 DM
        @{B}Symphonie@{UB} Pro                                           70 USD / 120 DM

        -------------------------------------------------------------------------
        H O T   S U M M E R    D I S C O U N T   valid till August 97
        -------------------------------------------------------------------------



        Product Type                                            Price / Preis(*)
        ------------                                            -------------
        FREE @{B}Symphonie@{UB} from internet                            free
        FREE @{B}Symphonie@{UB}                                          10 USD / 20 DM

        @{B}Symphonie@{UB} Pro ACADEMIC                                  60 USD / 110 DM
        @{B}Symphonie@{UB} Pro ACADEMIC & @{"Sound FX" link "SFXInfo"}                      83 USD / 150 DM
        @{B}Symphonie@{UB} Pro ACADEMIC for MacOS                       100 USD / 180 DM (planned)

        @{B}Symphonie@{UB} Pro                                          300 USD / 550 DM
        @{B}Symphonie@{UB} Pro & @{"Sound FX" link "SFXInfo"}                              323 USD / 580 DM
        @{B}Symphonie@{UB} Pro for MacOS                                400 USD / 700 DM (planned)

        @{B}Symphonie@{UB} FOR ENTERPRISEs                              (ask for special pricing)
        @{B}Symphonie@{UB} FOR USERGROUPS                               (ask for special pricing)

        (*) Minimal amount !


        Shipping Tax / Liefergebühren
        -----------------------------
        P&P                                                     10 USD / 20 DM

        Express Service                                 add     10 USD / 18 DM
        Nachname Service (you pay the postman)          add     10 USD / 18 DM (western europe only)
        If you send a cheque please                     add     10 USD / 18 DM (billing tax)


        - Cash in USD and western european currencies accepted
        - Postal Moneyorder accepted
        - @{"International Moneyorder" link "IntMoneyService"} accepted.
        - Mailing via UPS possible. (Ask at UPS for shipping Tax)
        - Import taxes vary for different countries

        People from outside Europe ask at their PO/Bank for shipping/paying possibilities.


        NOTE: A cheap, very fast and safe way to get @{B}Symphonie@{UB} is to use
              POSTAL MONEYORDER. I recommend you use this way of ordering





Produkt Information:



        --------------------------------------------------------------
        @{B}Symphonie@{UB} Pro :           300 USD   (Out for Sale, NOW !)
        --------------------------------------------------------------
        (includes @{B}Symphonie@{UB} Jr)

        - 8...256 Soundchannels

        - 16 Bit Sample Preprocessor
        - 16/16 Bit Mixer

        - Audio OUT :  9Bit Stereo Amiga
                      14Bit Stereo Amiga
                      16Bit Digital Stereo (Audio Rendering)

                      16Bit AHI (planned)

        - Audio Rendering (for HDR, MC/LP/CD Production, DAT, Postmixing, Syncronisation ...)

            Modes  : 8/16 Bit
                     Mono/Stereo/L/R
                     Little Endian/Big Endian

            Format : Maestro (Samplitude support)
                     MAUD (16 Bit iff) by Macrosystem
                     Wave (PC) by Microsoft Inc.
                     Raw

            Multichannel possibility (Mute Samples/Tracks/Dsp)

            Max 16x Pre Oversampling (Sample Preprocessor)

        - Printed manuals are no longer planned
          A HTML version of the guide is planned instead





        SPECIAL PRICING CONDITIONS -----------------------------------
        --------------------------------------------------------------



        --------------------------------------------------------------
        @{B}Symphonie@{UB} Pro ACADEMIC:   60  USD   (Out for Sale, NOW !)
        --------------------------------------------------------------
        (includes @{B}Symphonie@{UB} Jr)

        - for non commercial purpose like :
        
          * private home use
          * educational use at schools/ universities
          * experimental purpose (no money earning purpose)
          * freeware projects (freeware games, demos & other software)
          * Authors of commercial Amiga Software also get this special discount
          
          if you spread you modules, but suddenly start gaining
          money for your work, you have to upgrade to the non academic release
          of course.



        --------------------------------------------------------------
        @{B}Symphonie@{UB} & @{"SFX" link "SFXInfo"}         ADD 23 USD   (Out for Sale)
        --------------------------------------------------------------
        - Includes @{"SFX" link "SFXInfo"} (Digital Sound Processor)
          by Stefan Kost
          (for Sample Editing, Dsp fX and Sample Conversion)



        --------------------------------------------------------------
        @{B}Symphonie@{UB} FOR USERGROUPS          (Out for Sale)
        --------------------------------------------------------------
        - at least 2 people
        - Ask for Special Pricing



        --------------------------------------------------------------
        @{B}Symphonie@{UB} FOR ENTERPRISEs         (Out for Sale)
        --------------------------------------------------------------
        - 1x FULL SYMPHONIE PRO + MULTIUSER LICENCE
        - Ask for Special Pricing




Bestellung ist NUR möglich über:

        RealTime Software

        Patrick Meng
        Rosenfeldweg 4
        CH-6048 Horw
        Switzerland
@endnode





@node "IntMoneyService" "über Int. Money Order"
@toc "MAIN"
  Angaben:

  BIC (Bankencode) : LUKB CH 2260A
  KONTO NR           01-08-303019-00 HORW
  NAME               PATRICK MENG

  (USA:   via Citibank NY)

@endnode

@node "CashService" "über Cash"
@toc "MAIN"
  Adresse:

  RealTime Software

  Patrick Meng
  Rosenfeldweg 4
  CH-6048 Horw
  Switzerland
@endnode

@node "InternSymMenu" "über Symphonie Innereien"
@toc "MAIN"
  @{B}Symphonie@{UB} wurde geschrieben in Motorola 020 Assembler.
  Language Type: Modular Assembler.

  Intern arbeitet das Programm ansatzweise objektorientiert.
  Dies macht sich hauptsächlich in der Kürze des Programmes
  bemerkbar.

  Die zentralen Routinen sind gut optimiert.




  @{B}Symphonie@{UB} System Daten:
  ----------------------

  Maximal 256 Monokanäle (128 Stereokanäle)

  Volumenauflösung      : 16Bit
  Frequenzauflösung     : 32Bit

  Sample Preprocessor   : 16Bit
  ViRT Sample Processor : 16Bit


  2 Phase Oversampling
  Software DSP


  INPUT: (Samples)

     Sampleauflösung :  8/16 Bit	    (vgl. unterstützte Sample Formate)
     Samplingrate    :  10 kHz - ca. 100 kHz


  OUTPUT: (Audio Out)

     Sampleauflösung :  9/14 Bit             (Amiga ohne externe Soundkarte)
     Mixrate         :  10 kHz- 50 kHz       (Amiga ohne externe Soundkarte)


  AUDIO RENDERING: (non realtime Audio Out)

     Sampleauflösung :  8/16 Bit
     Mixrate         :  5 kHz- ca. 250 kHz


  Max 128 Samples * Max 2 MB (8 Bit Samples, Preoversampling=1) per Sample
  = Max 0.25GB Samplematerial per Song (theoretisch !! ;)


  (Intern: Max 4 MB Samplelänge, abhängig von Preoversampling level)

@endnode

@node "QualitätMenu" "über Soundqualität"
@toc "MAIN"
  Was will @{B}Symphonie@{UB} ?

  - @{B}Symphonie@{UB}musik will CPU intensiv sein
  - @{B}Symphonie@{UB} ist eine Anwendung, die auf Samples basiert. Somit ist eine
    grosse Stimmzahl (Bsp lange Ausklingzeiten) wichtig.
  - @{B}Symphonie@{UB} kann keine langen Samples verwenden. Für diesen Zweck ist
    eine HDR Software eine mögliche Hilfe. (Postmixing)

  Resync
  ------

  Um das System neu zu Syncronisieren ist die Mix Frequenz (System->Freq) zu verändern.



  Frequenzgang
  ------------

  Der Frequenzgang wird bestimmt durch die Mixrate der Hardware. (GUI:System/Freq)

  Die Echtzeitausgabe über die im Amiga integrierte Soundkarte ist dank DMA
  mit der Bildschirm Frequenz verknüpft.

    -  Monitor             Max. Mixrate    Bildschirmmodus (Screenmode Requester)
       -------             ------------    -------------------------------------------
       1084S(15kHz)         4kHz- 28 kHz   alle

       1960/VGA/Multiscan  28kHz- 50 kHz   DblNTSC,DblPAL, MULTISCAN, Euro72
      
       SuperVGA/Multiscan  über 50kHz      nur mit veränderten Bildschirmmodi , 31kHz->40kHz
                                           Für Experten ONLY !
                                           (-> Hinweise in Quickstart beachten !) 

  Auflösungsvermögen
  ------------------

  Die Auflösung wird durch die lokale Hardware limitiert. Eine hohe Auflösung
  bewirkt: wenig Rauschen und reinen/klaren Sound.

  Amiga (Render Mode):                         16 Bit
  Amiga (in Echtzeit):                       9/14 Bit  (ohne Soundkarte)

  Im Rendermodus wird die Ausgabe in eine virtuelle Soundkarte mit wählbarer
  Auflösung/Frequenz umgeleitet. (zB. 8 Bit oder 16 Bit)




  Wie erreiche ich mit @{B}Symphonie@{UB} optimale Qualität ?
  

  Voraussetzung ist: gutes Rohmaterial (Samples):

    - nur die besten Samples verwenden
    - Samplingrate 40 kHz oder höher
    - die Samples sollten sauber geschnitten sein
    - 16 Bit Samples tönen besser



  Benutzung in @{B}Symphonie@{UB}

    - falls 8 Bit Samples verwendet werden, sollten
      diese in @{B}Symphonie@{UB} mittels der @{"Downsample" link "DownsampleVirtuel"}
      Funktion entsprechend vorbereitet werden.

    - Benutze Euro72 oder Multiscan ScreenModus
      und schalte die Qualität von 28 kHz
      auf mindestens 36 kHz



  Zukunftskompatibel sein:

    - 16 Bit Samples sollten verwendet werden.

    - viele Stimmen bewirken intern ein erhöhte Soundauflösung

      Bsp: ein 1 Channel Modul mit 8Bit Samples 56kHz
           wird gespeichert als: NUR 8 Bit, 56kHz Sound

      Bsp: ein 16 Channel Modul mit 16Bit Samples 100kHz
           wird gespeichert als: minimal 20 Bit, 100kHz Sound

    - viele Volumeneffekte (Tremole, CV, VSlide ) bewirken intern ein erhöhte Soundauflösung

    - Virtuelle Samples können eine erhöhte Sampleauflösung
      bewirken


  Hinweis: Die tatsächliche (hörbare) Ausgabequalität wird somit
           meist durch die jeweils vorhandene Audiohardware
           eingeschränkt, und kann erst durch Erweiterung im
           Hardwarebereich der internen Qualität etwas angenähert werden.

           @{B}Symphonie@{UB} Interne Qualität : Max ca 16-64 Bit (Soundabhängig)

           @{B}Symphonie@{UB} Jr      Qualität : Max 14 Bit     (84 dB Dynamic Range)
           @{B}Symphonie@{UB} Pro     Qualität : Max 16 Bit     (96 dB Dynamic Range)


  Zu beachten ist, dass der Amiga allerlei Störgeräusche liefert.
  (zB wenn keine Disk im Laufwerk ist)
  Deshalb kann nur mit professioneller Hardware (zB Soundkarte) oder
  im Rendermode hochwertige Ergebnisse erreicht werden.
  



  Tips:
  ----

  Hohe Qualität
  -------------

  Da Mixfrequenzen unter 30 Khz problematisch sind, kann der CPU
  Bedarf halbiert werden: Audio Modes: Left
                                       Right
  Anstelle des Stereosignals wird nur ein Monosignal ausgegeben.
                                       

  Rauschen
  --------

  Ursache: D/A Wandler der Hardware hat eine zu geringe Auflösung
  Beseitigung : 16 Bit Soundkarte oder besser 

  Ursache: Samples haben eine zu geringe Auflösung
  Lösung : 16 Bit Samples verwenden


  Quantisierungsrauschen
  ----------------------

  Ursache: D/A Wandler der Hardware hat eine zu geringe Auflösung
  Beseitigung : 16 Bit Soundkarte oder besser 


  Charakter: Samples tönen auf allen Frequenzen stark metallisch
  Ursache: System Mixrate ist zu gering (GUI:System/Freq)

  Beseitigung : GUI:System/Freq erhöhen


  Charakter: Ein Teil der Samples tönt metallisch, der Rest tönt gut

  Ursache: Die metallisch klingenden Samples 1x oder 2x "Downsamplen"
           (GUI:Instrument/D)

           Allgemeine Beseitigung: MENU:Prefs/S. Preprocessor/Oversample Wert erhöhen


  Charakter: Daselbe Sample tönt auf verschiedenen Tonlagen unterschiedlich
             stark metallisch

  Ursache:  Samplefrequenz des Samples ist zu gering

  Lösung : Das Sample 1x oder 2x "Downsamplen" (GUI:Instrument/D)
           Um die ürsprüngliche Tonhöhe beizubehalten ist die Instrumentstimmung
           um eine Oktave zu erhöhen
@endnode

@node "HelpMenu" "GUI Hilfe : Inhaltsverzeichnis"
@toc "MAIN"
      Information zu welcher @{"Gruppe" link Gruppe} :

      @{"System Control" link System}	Systemfeld (inkl Dsp Kontrollfeld)
      @{"Render" link Render}	        Digitale Ausgabe (HDR File)

      @{"Instrument" link Instrument}	Instrument Feld/ Samples laden
        @{"Waveform" link Waveform}	Wellenform Graph/ Loopbereich markieren

      @{"Song" link Song}		Song Struktur festlegen
      @{"Sequence" link Sequence}		Sequenzfolge festlegen
      @{"Position" link Pos}		Patternfolge festlegen

      @{"PatternEd Feld" link PattEd}	Hauptfeld ( Editieren von Patterns)
      @{"NoteEd" link NoteEd}		Editierfeld für ein einzelnes Ereignisse

      ------------------------------     

      @{"Menu" link MenuInfo}		Information über Menubefehle

      @{"Tastaturbelegung" link Tastaturbelegung}
@endnode

@node MenuInfo "Menu Verzeichnis"
@toc "HelpMenu"
  Information zu welcher Menugruppe:
  ---------------------------------

  @{"?" link Menu1}      Auskunft über @{B}Symphonie@{UB}

  @{"SYSTEM" link Menu2} Player, Soundmodi, Dspmodi
  @{"FILE  " link Menu3} Allgemeine Dateioperationen (Song, Modul, Prefs)
  @{"EDIT  " link Menu4} Editieroperationen
  @{"MOVE  " link Menu5} Befehle für die Navigation
  @{"SAMPLE" link Menu6} Sampleoperationen (inkl load/save)

  @{"PREFS " link Menu7} Voreinstellungen
@endnode

@node Menu1 "Info über : Menupunkt ?"
@toc "MenuInfo"
  ABOUT  Information über das Programm
         (Version, Autor ...)
@endnode

@node Menu2 "Info über : Menupunkt System"
@toc "MenuInfo"

  PLAYER -> x        Spielt den entsprechenden Abschnitt/Teil des aktuellen
                     Songs
  PLAYER -> STOP     Stopt den Songplayer



  AUDIO MODE  ->

         OVERSAMPLE  Ausgabetyp Oversampling Stereo 9 Bit einschalten
         9 BT

         STEREO 9BIT Ausgabetyp Stereo 9 Bit einschalten

         OVERSAMPLE  Ausgabetyp Oversampling Stereo 14 Bit einschalten
                     Bemerkung: falls Oversampling eingeschaltet ist, wird die
                                CPU ca. 30-40% weniger(!) stark belastet.
                                Allerdings wird der Frequenzgang halbiert.

         STEREO14BIT Ausgabetyp Stereo 14 Bit einschalten



         MONO        Ausgabetyp Mono 14 Bit einschalten
         MONO SURR   Ausgabetyp Mono 14 Bit und Surround Modus einschalten
         
         LEFT        Linke Audiokanäle in 14 Bit
         RIGHT       Rechte Audiokanäle in 14 Bit

         Bemerkung: SURROUND bewirkt, dass aus einem monophonen Signal künstlich
                    ein stereophones Signal berechnet wird. (Durch Invertierung)


         Die 14 Bit Modi werden durch Kaskadierung zweier Audiokanäle erreicht.


  DSP -> DEACTIVATE     alle DSP Effekte ausschalten


  DSP -> ECHO           DSP Echoeffekt ein-/ausschalten
			Dem Originalsignal wird ein Echo des Signals mit bestimmter
                        Verzögerung und Stärke beigemischt.

  DSP -> CROSSECHO      DSP CrossEchoeffekt ein-/ausschalten
                        Dem linken Kanal wird das Echo des rechten Kanals beigemischt
                        und umgekehrt.

  DSP -> CENTERECHO     Wie CROSSECHO. Das Echo blendet jedoch in die Mitte.


  DSP -> LP FILTER      Postfilter für das Echo Signal.


  DSP -> DELAY          DSP Delayeffekt ein-/ausschalten
                        Dem Originalsignal wird eine Verzögerung des Signals mit bestimmter
                        Verzögerung und Stärke beigemischt.

  DSP -> CrDELAY        DSP Delayeffekt ein-/ausschalten
                        Dem Linken Signal wird eine Kopie des Rechten Signals mit bestimmter
                        Verzögerung und Stärke beigemischt.
                        Spezialfall: Delay = 0 -> Die Monokompatibilität kann erhöht werden)

  DSP -> HALL           DSP Halleffekt ein-/ausschalten
                        Predelay ist im      System-> Delay -> Len zu modifizieren
                        Hallvolume ist im    System-> Delay -> Level zu modifizieren
                        Hallsize ist im      System-> Hall ->  Len zu modifizieren
                        Hallfeedback ist im  System-> Hall ->  Level zu modifizieren
                        Warning: Delay Len MUSS < Hall Len !!

  DSP -> CrHALL         DSP CrHalleffekt ein-/ausschalten

  DSP -> LP FILTER      Postfilter für Delay/ Hall.



  Bemerkung: Hinweise in Quickstart beachten !

  QUIT               @{B}Symphonie@{UB} verlassen
@endnode

@node Menu3 "Info über : Menupunkt File"
@toc "MenuInfo"

  Songoperationen
  ---------------

  SONG   -> LOAD       Song laden
  SONG   -> SAVE AS    aktuellen Song unter Namen speichern
  SONG   -> SAVE       aktuellen Projekt (Song oder Module)  wiederholt speichern


  Moduloperationen
  ----------------

  MODULE -> LOAD       Song-Modul laden
  MODULE -> SAVE AS    Song in Modulformat unter Namen speichern

                       Teile die gespeichert werden:

                       * Song
                       * alle Samples
                       * eine Textdatei (falls diese vorher geladen wurde)

  MODULE -> DiZCRIPT   ein Textfile laden und anzeigen. Die Textdatei wird beim
                       Spielen des Songs durch die Request Funktion des Systems
                       angezeigt. Die Datei muss möglichst kurz sein, und sie darf
                       keine Sonderzeichen enthalten. ( <RETURN> ist erlaubt)

  MODULE -> EXTRACT S  alle Samples eines Modules ins t: Verzeichnis kopieren

                       Warnung: alle Samples im Speicher werden beim ausführen
                                dieser Funktion gelöscht !!!

  MODULE -> EXT 8Bit   alle Samples eines Modules ins t: Verzeichnis kopieren
                       und entsprechend konvertieren, falls noetig.
                       
  MODULE -> E. QUALITY Konverter Qualitaet setzen


  Prefs Operationen
  -----------------

  PREFS ->  LOAD		Laden einer Prefs Datei
  PREFS ->  SAVE AS             Prefs Datei unter bestimmten Namen speichern
  PREFS ->  SAVE DEFAULT        Aktuelles Setup als Startumgebung speichern

  Flagwerte zur Steuerung der Prefs Dateioperationen

  PREFS ->  NO AUDIO		Audio Umgebung (Beispiel Sample Boost, Stereo Setup)
                                nicht verändern/speichern
  PREFS ->  NO VIDEO		Video Umgebung (Fenster Anordnung) nicht verändern/speichern
  PREFS ->  NO SONG SETUP       Song Setup (Kanalzahl, Patternzahl, Patternlänge)
                                nicht verändern/speichern.

  Die obigen Flagwerte haben je nach Dateioperation verschiedene Bedeutung:

  Ladevorgang (PREFS->LOAD)     Das jeweilige Teilsetup soll beim Laden der Preferences Datei
                                nicht verändert werden; auch dann nicht, wenn die Information
                                in der Preferences Datei vorhanden wäre.

  Speichervorgang (PREFS->SAVE) Das jeweilige Teilsetup soll nicht gespeichert werden.

  PACK  -> SONG        Song Packer ein/aus
                       Der Song Packer ist 99% sicher.

  PACK  -> SAMPLES     alle Samples DELTAPACKed speichern

                       Bemerkung: (Deltapack wurde implementiert, um externen
                                  Kompressoren zu deutlich höheren Raten
                                  zu verhelfen Bsp: lha, PP, xpk ...)
@endnode

@node Menu4 "Info über : Menupunkt Edit"
@toc "MenuInfo"

  ALLGEMEINE BEFEHLE

  X -> CUT       schneidet das betreffende Element heraus
  X -> COPY      kopiert das betreffende Element in den Buffer
  X -> PASTE     kopiert das Element des Buffers in die aktuelle
                 Umgebung

  SPEZIFISCHE BEFEHLE

  PATTERN -> DUPLEN/SHRINK/EXPAND  siehe @{"Pattern" link Pattern}

  TRACK   -> MIRROR  aktuellen Track spiegeln
  TRACK   -> SWAP    aktuellen Track mit Buffer vertauschen
  TRACK   -> ROT UP  aktuellen Track nach oben verschieben
  TRACK   -> ROT DWN aktuellen Track nach unten verschieben

  BLOCK   -> ADD     Block hinzufügen
  BLOCK   -> EXPAND  Block erweitern
  BLOCK   -> CLEAR   Block löschen
  BLOCK   -> SWAP    Block im Buffer mit Block an der
                     Crsr Position vertauschen.

  NOTE    -> INSERT  Note einfügen
  NOTE    -> DELETE  Note löschen

  -------------------------------------------------------------

  MACRO -> RECORD    Aktiviert den @{B}Symphonie@{UB} Ereignis Recorder

                     Ereignistypen, die aufgenommen werden:

                     - Tastatur
                     - Menuereignisse
                     - Gadgets

                     Information, die bei jedem Ereignis mit-
                     aufgenommen wird:

                     - SHIFT Status

  MACRO -> RePLAY    Spielt die aufgenommen Ereignisse ab

  UNDO               letzte Veränderung "löschen"

@endnode
  MACRO -> RECORD    Aktiviert den @{B}Symphonie@{UB} Ereignis Recorder

@node Menu5 "Info über : Menupunkt Move"
@toc "MenuInfo"

 Die Move Befehle dienen dem Navigieren und dem direkten Anwählen spezieller
 Orte in @{B}Symphonie@{UB}.


 SEQUENCE -> PREVIOUS	vorherige Sequenz anwählen
          -> NEXT	nächste Sequenz anwählen
          -> FIRST	erste Sequenz anwählen
          -> LAST	letzte Sequenz anwählen   

 POSITION -> PREVIOUS	vorherige Position anwählen
          -> NEXT	nächste Position anwählen
          -> FIRST	erste Position der aktuellen Sequenz anwählen
          -> LAST	letzte Position der aktuellen Sequenz anwählen

 PATTERN  -> PREVIOUS	vorheriges Pattern anwählen
          -> NEXT	nächstes Pattern anwählen
          -> FIRST	erstes Pattern des Songs anwählen
          -> LAST	letztes Pattern des Songs anwählen   

 CRSR     -> TOP LEFT	  Crsr zur ersten Note des Patterns bewegen
          -> BOTTOM RIGHT Crsr zur letzte Note des Patterns bewegen
          -> TOP	  Crsr zur ersten Zeile des Patterns bewegen
          -> BOTTOM	  Crsr zur letzten Zeile des Patterns bewegen
@endnode

@node Menu6 "Info über : Menupunkt Sample"
@toc "MenuInfo"

  LOAD                Sample laden
                      NEW: falls <SHiFT> gedrückt : Sample unbenennen (rename)

  BANK -> LOAD        Sampleauswahl laden
  BANK -> SAVE AS     Sampleauswahl speichern

  REMOVE              aktuelles Sample entfernen

  IMPORT -> 16BIT RAW Nicht mehr vorhanden (-> 16 Bit Wav Samples verwenden !)
  EXPORT              Nicht mehr vorhanden

  VIRTUAL -> RECALC   alle @{"ViRT Samples" link VirtuelleInstrumente} neu berechnen
  VIRTUAL -> @{"MIX" link MixVirtuel}/@{"QUE" link QueVirtuel}/@{"REMIX" link RemixVirtuel}
  VIRTUAL -> @{"TRANSWAVE" link RemixixTranswave}

  SUPPORT -> ADJUST   für alle diskbasierten Samples einen neuen Filepfad setzen
             PATH

  SUPPORT -> RELOAD   alle Samples neu laden. Alle Virtuellen Samples neu berechnen. 
             ALL
@endnode

@node Menu7 "Info über : Menupunkt Prefs"
@toc "MenuInfo"
  Preferences:

  SYSTEM -> SYSTEM BUFFER

      Wertbereich (4..8)
      Startwert   4
      Wirkung     Anzahl Buffer für das Multibuffering System von @{B}Symphonie@{UB}
                  festlegen.

                  Richtwerte: Samples antesten     SYSTEM BUFFER : 4
                              Songs spielen        SYSTEM BUFFER : 8


  SYSTEM -> DSP BUFFER
      Wertbereich (1..255)
      Startwert   16
      Wirkung     Maximale Bufferzahl für den Dsp festlegen


  SYSTEM -> RENDER BUFFER
      Wertbereich (8K..2MB)
      Startwert   16
      Wirkung     Maximale Bufferzahl für AudioRendering festlegen



  SYSTEM -> SET MAX PROC VOL	"Set Maximum Processed Volume"

      Wertbereich (1..99)
      Startwert   74

      Wirkung     Default Wert 74: Alle Ereignisse mit Volume 75%-100% werden
                                   mit Volumen 100% gespielt.


      Beispiel 2  Wert 49: Alle Ereignisse mit Volume 50%-100% werden
                           mit Volumen 100% gespielt.

      Beispiel 3  Wert 99: Alle Ereignisse mit Originalvolumen spielen


      Bemerkung   Falls ein bestimmtes Ereigniss mit Volumen 100% gespielt
                  wird, so geschieht dies (Berechnung) sehr schnell.
                  (CPU "Turbomode").





  REALTIME -> POS CHANGE
      Flag Wert
      Wirkung     Beim Spielen des Songs soll die Positionsnummer/Patternumber
                  nicht aufgefrischt werden

  REALTIME -> SCROLLING
      Flag Wert
      Wirkung     Beim Spielen des Songs soll der Crsr des PatternEd nicht mitscrollen

  REALTIME -> SPECTRUM
      Flag Wert
      Wirkung     Spektrum Analyzer deaktivieren

  REALTIME -> SCOPE
      Flag Wert
      Wirkung     Sound Scope deaktivieren

  REALTIME -> FORCE UPDATE
      Flag Wert
      Wirkung     Optische Instrumente (Beispiel: Scope) auch auffrischen, falls
                  kein Song gespielt wird.



  PATTED -> SET JUMPER
      Flag Wert
      Wirkung     Jumplänge für das Editieren im PatternEd festlegen

  PATTED -> PITCH
      Flag Wert
      Wirkung     Beim Setzen von KeyOn Befehlen durch die Klaviatur
                  soll die vorhandene Tonhöhe nicht überschrieben werden.

  PATTED -> INSTRUMENT
      Flag Wert
      Wirkung     Beim Setzen von KeyOn Befehlen durch die Klaviatur
                  soll die vorhandene Instrumentnummer nicht überschrieben werden.

  PATTED -> VOLUME
      Flag Wert
      Wirkung     Beim Setzen von KeyOn Befehlen durch die Klaviatur
                  soll das vorhandene Volumen nicht überschrieben werden.



  LOAD SONG/MOD -> KEEP PATTERN NUMBER
      Flag Wert
      Wirkung     Die aktuelle Patternzahl soll beibehalten werden

                  Anwendung: Einen Song von 64 Patterns auf 100 Patterns erweitern.

  LOAD SONG/MOD -> CONVERT SONG
      Flag Wert
      Wirkung     Beim Laden eines Songs die aktuelle Songstruktur 
                  (Stimmzahl und Patternlänge) beibehalten

                  Anwendung: Einen Song von 8 auf 16 Stimmen erweitern.
                             Einen Song "verlängern" (Patternlänge erhöhen)



  S.PREPROCESSOR -> SET ANTIKNACK
      Wertbereich (1..1024) in Samples
      Startwert   32

      Ziel        Pegelsprünge bei schlecht geschnittenen Samples automatisch
                  entfernen.

      Wirkung     Fade in/Fade Out Länge des Samplepreprocessor festlegen
                  Ein kleiner Wert bewirkt, dass alle Samples einen harten
                  Anschlag "bekommen"

                  Der Antiknack Algorithmus schaltet sich selbstständig aus, wenn
                  das bestimmte Sample schon sauber geschnitten ist.
                  (Silence auf erstem und letztem Sample)

      Bemerkung   Dieser Parameter wirkt nur beim Laden/Berechnen von Samples
                  Liefert nur bei 2,4,8,16,32, ... gute Resultate


  S.PREPROCESSOR -> SET SAMPLE BOOST
      Wertbereich (1..200%)
      Startwert   100%
      Wirkung     Festlegen der Maximallautstärke für Samples
                  
      Bemerkung   Falls durch DSP Effekte Übersteuerung auftritt, sollte dieser
                  Parameter vermindert werden. 

                  Dieser Parameter wirkt nur beim Laden/Berechnen von Samples



  S.PREPROCESSOR -> SET OVERSAMPLE
      Wertbereich (1..4) in Samples

                  1= 2x  Pre Oversampling
                  4= 16x Pre Oversampling

      Startwert   1
      Wirkung     Vermindert das Quantisierungsrauschen niederfrequenter
                  Samples.
                  
      Bemerkung   Dieser Parameter wirkt nur beim Laden/Berechnen von Samples

      Warnungen   Speicherbedarf der Samples:
                   1= 2x
                   2= 4x
                   3= 8x
                   4=16x

                  Maximal erlaubte Samplelänge eines
                  8 Bit Mono Samples: (Intern 4 MB, damit alle FX korrekt wirken)
                   1= 2MB
                   2= 1MB
                   3= 512 KB
                   4= 256 KB

                  Tonumfang in @{B}Symphonie@{UB} (Maximaler Pitch):
                   1=Max C6
                   2=Max C5
                   3=Max C4
                   4=Max C3
              


  STEREO CONTROL -> SET SAMPLE DIFF
      Wertbereich (0..1000) in Samples
      Startwert   0 (inaktiv)
      Wirkung     wirkt sofort
                  Erweiterung der Stereobasis durch kleine Differenz
                  der Sample Startposition zwischen linkem und rechtem Kanal
                  
  STEREO CONTROL -> SET PITCH DIFF
      Wertbereich (0..128)
      Startwert   0 (inaktiv)
      Wirkung     wirkt sofort
                  Erweiterung der Stereobasis durch Differenz
                  der Frequenz zwischen linkem und rechtem Kanal
  
  STEREO CONTROL -> SET PITCH DIFF

  GUI            -> CHANGE LOOK

                   GUI Optik modifizieren

  GUI            -> CHANGE GADGETS

                   2D / 3D Gadgets
@endnode



@node Block "Blockoperationen"
@toc "HelpMenu"

  DEF: Ein Block ist ein beliebig grosser Auschnitt des aktuellen
       @{"Patterns" link Pattern}. 


       <RETURN> dient dem markieren des Blockes

       Bsp:

       1. Return ->  Blockanfang setzen (3,4  W/H)
                                         x,y  w,h     (x=Track#, y=Zeile#, w=Breite, h=Höhe)

       2. Return ->  Blockende setzen   (3,4  2/16)

          Block ist auf 3/4 bis 5/20 gesetzt.
          Blockbreite: 2, Blockhöhe: 16


  BEMERKUNGEN:

       minimale Blockgrösse : 1 Note (w=1,h=1)
       maximale Blockgrösse : 1 ganzes Pattern (Bsp: w=8,h=64)


  ------------------------------------------------------------------------


@endnode



@node System "System Control  Info"
@toc "HelpMenu"

Stimmenzahl festlegen (Anzahl Audiokanäle)

8	-   8 Physical Voices und System Neustart
16	-  16 Physical Voices und System Neustart
32	-  32 Physical Voices und System Neustart
64	-  64 Physical Voices und System Neustart
128	- 128 Physical Voices und System Neustart
256	- 256 Physical Voices und System Neustart

Bemerkung: Je höher die Stimmzahl, desto tiefer ist die Qualität der
           einzelnen Audiokanäle im Mix.

           8 Stimmen: Max 14-15 Bit per Kanal
         256 Stimmen: Max  9-10 Bit per Kanal

Frequenz in Hz |<| |>| festlegen der System Mixrate
Speed in Bpm   |<| |>| festlegen der System Geschwindigkeit


Time | Sequenztime / Songtime | zeigt die Spiellänge der aktuellen Sequenz
  und des gesamten Songs

Bemerkung: falls der Song nur aus einer Sequenz besteht, so gilt immer:
           Songtime:= Sequenztime

-----------------------------------------------------------------------

Songplayer:

SONG       - Spielt das aktuelle Lied
SEQ        - Spielt die aktuelle Sequenz
POS        - Spielt das aktuelle Lied ab der aktuellen Position
PATT       - Spielt das aktuelle Pattern

STOP       - Stoppt den Player

-----------------------------------------------------------------------

DSP CONTROL

ECHO

Len          |<| |>| festlegen der Dsp Echo Effektlänge in Systemzyklen
Level        |<| |>| festlegen der Dsp Echostärke (100%, 50%, 25%, 12.5%... ) 


DELAY

Len          |<| |>| festlegen der Delayverzögerung in Systemzyklen
Level (log)  |<| |>| Signalstärke des verzögerten Signal wählen (100%, 50%, 25%, 12.5%... )

HALL (SymPro)

Len          |<| |>| festlegen der Hallgroesse in Systemzyklen
Level (log)  |<| |>| Hall Feedbacklevel

-----------------------------------------------------------------------
Sample Diff  |<| |>| Stereobild erweitern (Default = 0)
Pitch Diff   |<| |>| Stereobild erweitern (Default = 0)

-----------------------------------------------------------------------
DSP PLUG IN

  LOAD       DSP PlugIn laden
  ON         DSP Starten
  OFF        DSP Stoppen

@endnode

@node Song "Song - Help"
@toc "HelpMenu"

DEF: Ein Song (Lied) besteht aus einer bestimmten Anzahl
     aufeinanderfolgender @{"Sequenzen" link Sequence}

  REC         Schaltet um zwischen Live / Record Betrieb

  LOAD        Lied laden
  SAVE AS     Aktuelles Lied speichern
  SAVE        Aktuelles Projekt (Song oder Module!) noch einmal unter demselben Namen speichern
  MOD         Laden eines Moduls

  NEW         Neues Projekt beginnen (altes wird gelöscht)

  LEN         Patternlänge neu festlegen (die aktuellen Daten gehen verloren)
  PATTERN     Patternzahl neu festlegen (die aktuellen Daten gehen verloren)
@endnode


@node Sequence "Sequence - Help"
@toc "HelpMenu"

DEF: Eine Sequenz besteht aus einer Reihe aufeinanderfolgender @{"Positionen" link Pos}


# [<] [>]  - Aktuelle Sequenz wählen (0..63)

|X|		- aktuelle Sequenz in den Buffer kopieren
                  und aktuelle Sequenz auf Startwerte setzen

|C|		- aktuelle Sequenz in den Buffer kopieren

|P|		- aktuelle Sequenz aus dem Buffer kopieren

|DUP|		- aktuelle Sequenz auf die nächsthöhere duplizieren
|DEL|		- aktuelle Sequenz herausschneiden


|PLAY|          - Diese Sequenz soll gespielt werden
|SKIP|          - Diese Sequenz soll übersprungen werden (Mute)
|END|           - Diese Sequenz markiert das Ende eines Liedes.
                  alle nachfolgenden Sequenzen werden nicht gespielt.


BGN   [<] [>]   - Wählt die Startposition der aktuellen Sequenz
LEN   [<] [>]   - Wählt die Anzahl Positionen, die gespielt werden sollen
                  (beginnend mit der Startposition der Sequenz)

TRNS  [<] [>]   - Legt einen Transponierwert für die aktuelle Sequenz fest
LOOP  [<] [>]   - Wählt wieoft diese Sequence wiederholt werden soll


@endnode


@node Pos "Position - Help"
@toc "HelpMenu"

DEF: Eine Position definiert, welcher Ausschnitt aus welchem @{"Pattern" link Pattern}
     gespielt werden soll.

CPY        - kopiert die aktuelle Position in den Buffer
DUP        - kopiert die aktuelle Position auf die nächsthöhere
             (alle folgenden Positionen werden um eine Position versetzt)
PST        - Schreibt die Position im Buffer in die aktuelle Position
CLR        - Setzt die aktuelle Positon auf Standardwerte
INS        - alle folgenden Positionen werden um eine Position versetzt

[<] [>]    - Wählt die aktuelle Position

DEL        - löscht die aktuelle Position
             (alle folgenden Positionen werden um eine Position rückversetzt)


Parameter einer bestimmten Position:

  BGN      - Startzeile des gespielten Patterns
  LEN      - Zahl der zu spielenden Patternzeilen
  CYCL     - Setzt die Abspielgeschwindigkeit relativ
             zur @{"SYSTEM" link System} Geschwindigkeit für
             die aktuelle Position

             Formel: Reale BPM= SYSTEM_BPM x 1 / POSITION_CYCL

             Bsp: Cycl  = 1  : maximale Abspielgeschwindigkeit (System Speed)
                  Cycl  = 3  : 1/3 der maximalen Abspielgeschwindigkeit
                  Cycl  = 5  : 1/5 der maximalen Abspielgeschwindigkeit

  TRNS     - Definiert für die aktuelle Position einen Transponier-Wert
             ( falls ein bestimmtes Instrument den @{"NOTUNE" link Instrument} Parameter aktiviert
               hat, wird dieses Instrument nicht transponiert )

  LOOP     - Setzt fest, wie oft die aktuelle Positon geloopt (wiederholt)
             werden soll


@endnode

@node Pattern "Pattern - Help"
DEF: Ein Pattern besteht aus einer bestimmten Anzahl @{"Tracks" link Track}
     abhängig von der im @{"SYSTEM" link System} Menu gewählten Stimmenzahl.
@endnode

DUPLEN     - Dupliziert den Ausschnitt, der beim Spielen des aktuellen Patterns
             ertönt, und hängt ihn am Schluss des Ausschnittes an.

             Bsp: Die aktuelle Position zeigt:

                  START : 16   (Spielt 8 Zeilen: Zeile 16 bis Zeile 23 des 
                  LEN   :  8    aktuellen Patterns )

             Der Befehl DUPLEN kopiert somit Zeile 16 bis Zeile 23 des
             aktuellen Patterns auf die Zeilen 24 bis 31.


@node Track "Track"
DEF: Ein Track ist die Grundeinheit des Patterns und beschreibt die
     Notenfolge für eine Stimme. Zwei aufeinanderfolgende Tracks (Bsp. Track 1 und 2)
     können als ein Stereo Track interpretiert werden.
@endnode



@node Instrument "Instrument"
@toc "HelpMenu"

 [<] [>]     - Wählt das aktuelle Instrument
 R           - aktuelles Instrument nocheinmal laden, bzw. aktuelles Instrument
               neu berechnen

 LOAD        - Weist dem aktuellen Instrument ein bestimmes Sample zu
               <SHiFT> gedrückt : Sample unbenennen (rename)


 VOL         - Lautstärke des aktuellen Instrumentes setzen.
	       Wertbereich 1-200 (%)
               100% = maximale Laustärke, ohne dass Verzerrungen auftreten


 Type (Instrument Typus setzen)
 -----------------------------

 1           - Standardinstrument ohne Loop ("1 Shot Sample")
 LOOP        - Endlos gelooptes Instrument

 SUST        - Schaltet um auf Sustained (gehaltenes Instrument)
               Dieses Instrument spielt :

               1. Den Anschlagsbereich des Samples
               2. Anschliessend n-mal den Loopbereich des Samples
                  (Die Loopzahl wird durch LOOP# bestimmt)
               3. Schliesslich den Ausklingbereich des Samples


 Op (Instrument Operatoren setzen)

 () NODSP    - Ausschalten der DSP Funktionen fuer das aktuelle Instrument
               (-> Perkussionsklänge)

 * NOTUNE    - Ausschalten  der Transponier Funktion der @{"Position" link Pos} für
               das aktuelle Instrument
               (-> Perkussionsklänge)

 MUTE        - Stummschalten des aktuellen Instrumentes (Mute)


 REMOVE      - Löscht das aktuelle Sample

               WARNUNG: Instrumente die Quellsample für virtuelle Instrumente sind,
                        sollten nicht gelöscht werden.


 Virtual (Virtuelle Instrumente kreieren)
 ---------------------------------------

 @{"MIX" link MixVirtuel}       - Kreiert ein @{"Virtuelles Instrument" link VirtuelleInstrumente}
 @{"QUE" link QueVirtuel}       - Kreiert ein @{"Virtuelles Instrument" link VirtuelleInstrumente}
 @{"REMIX" link RemixVirtuel}     - Kreiert ein @{"Virtuelles Instrument" link VirtuelleInstrumente}
 @{"TRANSWAVE" link RemixTranswave} - Kreiert ein @{"Virtuelles Instrument" link VirtuelleInstrumente}

 Tools (Samples manipulieren)

 @{"RVS" link RvsVirtuel}	- Umkehroperation für das aktuelle Sample
 @{"I" link ISampleVirtuel}	- Invertieren des aktuellen Samples (Phaseshift 180°)
 @{"D" link DownsampleVirtuel}	- Downsampleoperation für das aktuelle Sample
 @{"FILT" link FiltVirtuel}	- Interpolationsfilter für das aktuelle Sample




 Tune (Instrument stimmen)

 FINE        - Feinstimmen des Instrumentes:
               der Wertbereich -128 ... +127 umfasst ca. einen Ganzton

 PITCH       - Halbton-stimmen des Instrumentes:
               der Wertbereich -12 ... +12 umfasst 2 Oktaven

 L (Loopzahl für "sustained" Instrument setzen)

 B           - Loopbeginn modifizieren

 E           - Loopende modifizieren

 über @{"WAVEFORM" link Waveform}
 über @{"Samples" link Sample}
 über @{"Virtuelle Instrumente" link VirtuelleInstrumente}
@endnode

@node Waveform "Waveform"
@toc "HelpMenu"

 - Visualisiert das Sample des aktuellen Instrumentes

 - Dient der Wahl des Loopbereiches:

 Durch Druck mit der LMB (linke Maus Taste) innerhalb der Waveform,
 ziehen mit der Maus (bei gedrückter LMB) und loslassen innerhalb der
 Waveform wird ein Loopbereich markiert.

 Loopbereiche werden automatisch so optimiert, dass beim Loopübergang
 kein Pegelsprung ("Knacksen") auftritt.
@endnode


@node NoteEd "NoteEd"
@toc "HelpMenu"

  S I M P L E   E F F E K T E

  Simple Effekte sind "stand-alone" Effekte, die keine Parameter
  besitzen und deshalb keine Variationen zulassen.


  K O M P L E X E    E F F E K T E
  
  Komplexe Effekte haben einen(1) bis maximal drei(3) Parameter, so dass
  ihre Wirkungsweise je nach Parameter stark varieren kann.


  ---------------------------------------------------------------------------


  PITCH EFFEKTE
  -------------

    SET    KOMPLEXER EFFEKT
           PARAMETER        Pitch (C0..C5), Instr (0..127)
           WIRKUNG          aktuelle Frequenz setzen

           Bemerkung: die Instrumentnummer muss entsprechend gesetzt sein


    D/U    KOMPLEXER EFFEKT
           PARAMETER        Speed (0...255) bestimmt die Effektintensität
			      0 bewirkt, dass der Pitchslide Effekt ausgeschaltet
			      wird
           WIRKUNG          die Tonhöhe soll stetig erhöht/vermindert werden

           Bemerkung: KeyOn und SetPitch Erreignisse stoppen den Slideeffekt


    ADD    KOMPLEXER EFFEKT "PIT+"
           PARAMETER        Intensität (-128...127) bestimmt, wie stark
                            die Frequenz verändert wird
	   WIRKUNG          Die aktuelle Frequenz des aktuellen Kanals um einen bestimmten
	                    Wert ändern.

	   Bemerkung: Der Wertumfang von C (-128...127) entspricht ca. vier Halbtönen

           FORMEL: neue  Frequenz := alte Frequenz* (1+ C*1/1024)
                                  := alte Frequenz + (alte Frequenz*C/1024)


    VIBR   KOMPLEXER EFFEKT
           PARAMETER        Speed (0..128) Geschwindigkeit des Vibratoeffekts
                            Rate  (0..255) bestimmt wie stark sich der Effekt auf
                                           die aktuelle Frequenz auswirken soll
                                           (0= keine Wirkung, 255= maximale Wirkung)

 	   WIRKUNG          "Vibrato", die aktuelle Frequenz soll Sinusförmig schwingen

	   Bemerkung: Vibrato kann gleichzeitig mit anderen Effekten (Beispiel Pitchslide)
                      verwendet werden.
                      Im Gegensatz zu einem natürlichen Vibrato wird hier
                      das Obertonspektrum mitverschoben.


    "+"    SIMPEL EFFEKT    PU1/PU2/PU4
           WIRKUNG          aktuelle Frequenz erhöhen


    "-"    SIMPEL EFFEKT    PD/PD2/PD4
           WIRKUNG          aktuelle Frequenz vermindern


  INSTRUMENT EFFEKTE
  ------------------

    FROM   KOMPLEXER EFFEKT
           PARAMETER        Sample Position (0..255) bestimmt die Startpositon im Sample
                            - Variante mit Pitch und Instr möglich

           WIRKUNG          Spielt das aktuelle Sample ab einer bestimmten Position.
                            Die aktuelle Frequenz wird beibehalten.

           Bemerkung: Falls mit diesem Effekt zugleich ein bestimmtes Sample zu wählen
                      ist, muss die Tonhöhe gültig sein.

                      Die tatsächliche Sample Position errechnet sich aus der Summe
                      des Parameters und des Wertes von FADD

           Beispiele:

             Fall 1: FADD= 0

             Parameter Sa.Pos(0...255) bestimmt direkt die Startpositon im Sample
               Bsp: 0=Anfang, 128=Mitte, 255=Schluss

             Fall 2: FADD> 0
             
             Parameter Sa.Pos(0...255) + FADD bestimmen die Startpositon im Sample

               Bsp: FADD=5
                    C=0 : Anfang, C=128 : Mitte, C=250 : Schluss
                    (0+5)         (127+5)        (250+5)

               Bsp: FADD=128
                    C=0 : Mitte, C=127 Schluss, C=255 : Illegaler Wert da ausserhalb
                    (0+128)      (127+128)      (255+128 !)              des Samples


    FR&P     KOMPLEXER EFFEKT
             PARAMETER        Pitch (C0..C5) bestimmt die Tonhöhe
                              Sample Position (0..255) bestimmt die Startpositon im Sample
                              (0=Anfang, 255=Ende)
                              Instrument (0..127)  bestimmt welches Instrument zu spielen ist

             WIRKUNG          "From & Set Pitch"
                              wie FROM, zusätzlich wird noch die Tonhöhe und die
                              Instrumentnummer entsprechend interpretiert

    FSET     KOMPLEXER EFFEKT
             PARAMETER        Sample Position (0...255) bestimmt die Offsetpositon im Sample
                                0 = Anfang, 128 = Mitte, 255 = Schluss      
             WIRKUNG          "From Add Parameter := "
                              Setzt den FROMADD (Offset) auf den Wert von Sample Position

             Bemerkung: Die Wirkung dieses Befehl ist erst hörbar, wenn ein
                        FROM oder FR&P Befehl verwendet wird.

    FADD     KOMPLEXER EFFEKT
             PARAMETER        Fine Pos C(-128...127) bestimmt, wie stark FADD
                              verändert werden soll.

             WIRKUNG          "From ADD Parameter verändern"
                              Addiert zu FADD den Wert von Parameter C

             Bemerkung: Die Kombination aus FAD= und FADD kann benutzt werden
                        um sehr genau eine bestimmte Position im Sample
                        anzuspringen

                        Die Wirkung dieses Befehl ist erst hörbar, wenn ein
                        FROM oder FR&P Befehl verwendet wird.

             FORMEL: Neuer FADD := alter FADD + C* Samplelänge/16384

    SVIB     KOMPLEXER EFFEKT
             PARAMETER        Speed	(1..127 ) in Systemzyklen, 0= statischer Effekt/Effekt halten
                              Rate      (0..100%)  Effekttiefe

             WIRKUNG          Lässt den Samplestart Pointer Sinusförmig rotieren
                              Dieser Effekt wirkt nur in Kombination mit den FROM, FR&P Befehlen


  Warnung: SVIB und die anderen SampleFX dürfen nicht gleichzeitig verwendet
           werden. Vor einem SVIB sollte deshalb ein FSET(0) gesetzt werden.

  VOLUMEN EFFEKTE
  ---------------

    SET      SIMPEL EFFEKT
             PARAMETER        Volumen (1..100%)
             WIRKUNG          Volumen des aktuellen Kanals setzen

    D/U      KOMPLEXER EFFEKT
             PARAMETER        Speed (0...255) bestimmt die Effektintensität
                                0 bewirkt, dass der Volumenslide Effekt ausgeschaltet
			        wird
             WIRKUNG          das Volumen soll stetig vermindert/erhöht werden


    VOL+     KOMPLEXER EFFEKT
             PARAMETER        Intensität(-128...127) bestimmt, wie stark
                              das Volumen verändert wird

             WIRKUNG          das aktuelle Volumen des aktuellen Kanals um einen bestimmten
                              Wert ändern.

             FORMEL: neues Volumen := altes Volumen + C * 1/8

             Bemerkung: Falls das neue Volumen ausserhalb des erlaubten Bereichs
                        zu liegen kommt, wird das alte Volumen beibehalten.


    TREM   KOMPLEXER EFFEKT "TREM"

           PARAMETER        Speed (0..128) Geschwindigkeit des Tremoloeffekts
                            Rate  (0..255) bestimmt wie stark sich der Effekt auf
                                           das aktuelle Volumen auswirken soll
                                           (0= keine Wirkung, 255=maximale Wirkung)

	   WIRKUNG          "Tremolo", das Volumen soll Sinusförmig schwingen

	   Bemerkung: Tremolo kann gleichzeitig mit anderen Effekten (Beispiel Volumeslide)
                      verwendet werden.



    AC     KOMPLEXER EFFEKT "EMPH", Shift of Emphasis

           PARAMETER        Start (0..100) Start Volumen (bei Samplestart)
                            End   (0..100) End Volumen (bei Sampleende)
                            Type  (0, 1)   0=Off, 1= RampTo

	   WIRKUNG    Dieser Effekt, bewirkt, dass das Volumen direkt mit der
                      Samplesposition im Sample gekoppelt wird. (SamplePosition To Volume)

                      So können Anschlagsakzentuierungen oder Stereoeffekte
                      erzielt werden.

	   Bemerkung: Alle Volumeneffekt ausser Tremolo, werden vorübergehend
                      unhörbar gemacht, (wirken intern trotzdem weiter).

                      Um den Effekt auszuschalten muss der Typ 0 angewendet werden.



    OFF      SIMPEL EFFEKT
             PARAMETER        KEINE
             WIRKUNG          Kanal stummschalten, Ausgabe des Samples sofort stoppen

    ON       SIMPEL EFFEKT
             PARAMETER        KEINE
             WIRKUNG          Ausgabe des Samples weiterführen




  WEITERE EFFEKTE
  ---------------

  Geschwindigkeit verändern

   CYL=      KOMPLEXER EFFEKT
             PARAMETER        Cyclen (1...255) bestimmt, wie schnell die folgenden
                              Zeilen zu spielen sind

             WIRKUNG          Setzt die Abspielgeschwindigkeit neu.

             Bemerkung: Die neue Geschwindigkeit wird beibehalten, solange nicht
                        eine neue Position gespielt wird, oder die Geschwindigkeit
                        durch Effekte verändert wird.

             Bsp: CYCL = 1  : maximale Abspielgeschwindigkeit (System Speed)
                  CYCL = 3  : 1/3 der maximalen Abspielgeschwindigkeit
                  CYCL = 5  : 1/5 der maximalen Abspielgeschwindigkeit


    KEYOFF   SIMPEL EFFEKT
             WIRKUNG          Spielt den Ausklingbereich des aktuellen Instrumentes

             Bemerkung: wirkt nur bei SUSTained Instrumenten



    ECHO     KOMPLEXER EFFEKT
             PARAMETER        EffektTyp (Off, Normal, CrossEcho, Cross2 (Resonator) )
                              Level (100%,50%,25%...) Echo Volumen
                              Länge (1..n) Effektlänge in Systemzyklen     

             WIRKUNG          Die aktuelle Echo Umgebung setzen


    DELY     KOMPLEXER EFFEKT
             PARAMETER        EffektTyp (Off, Normal, Cross)
                              Level (100%,50%,25%...) Delay Volumen
                              Länge (1..n) Effektlänge in Systemzyklen     

             WIRKUNG          Die aktuelle Delay Umgebung setzen



    WARNING:

    Retrig : Beta release
    CV     : Beta release
@endnode


@node PattEd "Pattern Editor Feld"
@toc "HelpMenu"

In diesem Feld können Notenwerte eingegeben werden, dazu ist
zuerst von LIVE auf RECORD Betrieb umzuschalten.

Die einzelnen Tracks sind folgendermassen arrangiert:

  1. Track   Stereo Links
  2. Track   Stereo Rechts

  3. Track   Stereo Links
  4. Track   Stereo Rechts

  5. Track   Stereo Links
  6. Track   Stereo Rechts

  etc.


Ereignisse:

  Ein Ereignis ist entweder ein Notenereignis,
  ein Spezialeffekt oder ein komplexer Spezialeffekt.


Notenereignis : Notenformat

 NNNNIIIVV  (N= Notenwert, I= Instrument Nr, V= Volume

 Bsp:

 C 2-00050  Instrument Nr 0 mit 50% Lautstärke(Volumen)
            und der Tonhöhe C Octave 2 spielen.

 C#2-010+0  Instrument Nr 10 mit 100% Lautstärke(Volumen)
            und der Tonhöhe Cis Octave 2 spielen.

 A#1-10001  Instrument Nr 100 mit 1% Lautstärke(Volumen)
            und der Tonhöhe Ais Octave 1 spielen.

 Bemerkung: Ein Notenereignis bewirkt zudem, dass 
            Pitchslide/Volumeslide Effekte auf Null gesetzt
            werden ( Inaktivierung)

Spezial(effekte) sind im @{"Note Editor" link NoteEd} beschrieben.


Gadget Befehle:

  [<] [>]    - Wählt das aktuelle Pattern

  BLOCKOPERATIONEN:


  Blöcke setzen
  -------------

  Mark -> NOTE	Note markieren
  Mark -> TRK	den aktuellen Track markieren
  Mark -> PAT   das aktuelle Pattern markieren
  Mark -> BLK	Blockmarke an der aktuellen Crsr Position setzen
		(entspricht dem Druck auf die <RETURN> Taste)


  Do / Grundlegende Blockoperationen
  ----------------------------------

  C      Kopiert den markierten Block aus dem aktuellen Pattern 
         in den Block Buffer

  X      Schneidet den markierten Block aus dem
         aktuellen Pattern.

  P       Kopiert den Block an die aktuellen Crsr Position


  DUP     Kopiert den aktuellen Block des aktuellen Patterns auf das
          nächsthöhere Pattern
          BEMERKUNG: die aktuelle Patternnummer wird um Eins erhöht

  ADD     fügt alle Noten aus dem Blockbuffer an der aktuellen Crsr Position ein
          ( falls sich an einer bestimmten Stelle schon ein Ereignis befindet,
            so wird dieses beibehalten)


  EXPAND  fügt zwischen alle Zeilen des Blocks eine Leerzeile ein.
          (Warnung: die untere Hälfte des Blocks wird somit
                    gelöscht)

  SHRINK  entfernt alle ungeraden Zeilen des aktuellen Blocks 
          (Umkehroperation von EXPAND)


  Rot (Block rotieren)

  D    Block um eine Zeile nach unten rotieren. Die unterste Zeile wird somit an
       die Position der ersten Zeile des Blocks verschoben.

  U    Block um eine Zeile nach oben rotieren. Die oberste Zeile wird somit an
       die Position der letzten Zeile des Blocks verschoben.



  Pitch (Tonhöhe)

  -/+  erniedrigt/erhöht die Tonhöhe (Pitch) jeder Note des aktuellen
         Blocks. ( SHIFT gedrückt  ->  -/+ Oktave)


  Vol (Lautstärke)

  -/+  erniedrigt/erhöht das Volumen (Lautstärke) jeder Note des aktuellen
         Blocks. ( SHIFT gedrückt  ->  -/+ 10 Einheiten)


  Instr (Instrument Nummer)
  -/+  erniedrigt/erhöht die Instrumentnummer jeder Note des aktuellen
         Blocks. ( SHIFT gedrückt  ->  -/+ 10 Einheiten)

@endnode


@node  Tastaturbelegung "Tastaturbelegung"
@toc "HelpMenu"

 Tastaturbelegung:

 ESC  - Stoppt den Player

   F5 - Spielt das ganze Lied
   F4 - Spielt die aktuelle Sequenz
   F3 - Spielt die aktuelle Sequenz ab der aktuellen Position
   F2 - Spielt das aktuelle Pattern

   F1 - Den aktuellen Track "Mute'en" stummschalten

   F9   - Record/Live Modus
   F10  - Laden eines @{"Samples" link Sample}


 TAB   -  zur nächsten Tabulator Position
 (TAB) -  Tabulator setzen


 RETURN - Blockanfang(1x) bzw Blockende(2x) setzen

 SPACE  - aktuelle Note löschen
 (SPACE)- aktuellen Track löschen



 Numeric Keypad:

 [ ]    - Position ab/auf
 / *    - Pattern ab/auf

 Ins    - Note einfügen
 Del    - Note entfernen



 -> Aktuelles Ereignis modifizieren:


 +      - Volumen +1 (mit SHIFT: +10)
 -      - Volumen -1 (mit SHIFT: -10)

 6      - Instr   +1 (mit SHIFT: +10)
 9      - Instr   -1 (mit SHIFT: -10)

 5      - Pitch   +1 (mit SHIFT: + Oct)
 8      - Pitch   -1 (mit SHIFT: - Oct)


@endnode

@node Sample "Sample"
@toc "HelpMenu"

 Sample: Allgemeine Hinweise

 @{B}Symphonie@{UB} erkennt automatisch:

     AIFF 8/16 Bit MONO/STEREO (MAC,unpacked)

     RAW 8 Bit Samples
     RAW 16 Bit MONO Samples

     IFF 8 Bit MONO Samples (unpacked)
     IFF 8 Bit STEREO Samples (unpacked)

     WAVE 8 Bit MONO (PC, unpacked)
     WAVE 16 Bit MONO/STEREO (PC, unpacked)

     MAESTRO 16 Bit MONO/STEREO (von Samplitude)



 Sample: Ladevorgang

 Beim Laden eines Samples werden automatisch folgende
 Prozesse durchlaufen: (Sample Preprocessor)

 1. Konvertieren nach 16 Bit (falls kein 16 Bit Sample)

 2. Maximieren des Samples (Ausnutzung der Bit Bandweite)
 3. Pre-Oversampling
 4. Anti Knack (entfernt Amplitudensprüngen
                am Anfang und am Ende des Samples, )

 5. Konvertieren nach 8Bit (@{B}Symphonie@{UB} JR)
@endnode


@node Gruppe "GUI: Gruppe - Begriffserklärung"
@toc "HelpMenu"

Eine Gruppe ist eine optische/funktionale Ansammlung verschiendener
Hilfsmittel und Werkzeuge. Eine Gruppe ist durch einen 3D Rahmen begrenzt
und besitzt einen bestimmten Titel. zB. @{"SYSTEM" link System}.

@endnode


@node VirtuelleInstrumente "Virtuelle Instrumente - Begriffserklärung"
@toc "HelpMenu"

Ein virtuelles Instrument wird durch die in @{B}Symphonie@{UB}
eingebauten Synthese-Funktionen kreiert. Synthesesverfahren
ist : Wavetable-Synthesis.

Vorteile der virtuellen Samples:

  - benötigen keinen Festplattenspeicher, da sie
    jedesmal wenn der Song/ das Modul geladen wird, automatisch
    neu berechnet werden.

  - können benutzt werden um:

    1. "Akkord"-Samples zu kreieren
       (Bessere Resultate erreicht man mit gesampleten Akkorden)
    2. Mix-Samples zu kreieren (Bsp: Hihat und BassDrum -> 1 Sample )
    3. mehrere Tracks auf einen @{"Track" link Track} zu reduzieren
    4. Samples filtern, Samples rückwärts abspielen, Chorus
    5. komplexe Spezialeffekte 
    6. Qualität eines Samples steigern (-> Downsampling)



Um ein virtuelles Sample zu kreieren, ist im PattEd
die ensprechende Tonfolge zu schreiben

Interpretiert wird von @{B}Symphonie@{UB}:

 1.  Notenereignis     (Tonhöhe, Instrumentnummer, Volumen)
     Bsp: C-4 001+0     C-4      001               +0 (=100)


 2.  Notenereignis mit PitchUp/PitchDwn Effekt


Bis jetzt sind drei virtuelle Typen implementiert:

      @{" MIX  " link MixVirtuel} Samples
      @{" QUE  " link QueVirtuel} Samples
      @{"REMIX " link RemixVirtuel} Samples
      @{"TRANS " link RemixTranswave} Samples

Parameter eines Samples:

      @{"RVS" link RvsVirtuel}   Rückwärts spielen...
      @{"I" link ISampleVirtuel}     Invertierung...
      @{"D" link DownsampleVirtuel}     Downsampling...
      @{"FILT" link FiltVirtuel}  Interpolationsfilter...

@endnode

@node RemixTranswave "TRANSWAVE (kreieren eines virtuellen Instrumentes)"
Ausgangssample sind zwei kurz-geloopte Samples.
Ideal sind einzyklische Loops.

   1. Quelle: Loop von Sample A
   2. Quelle: Loop von Sample B

   Ziel:   ein leeres Instrument

Es wird ein Transwave mit 10 Zyklen berechnet.
Dabei wird von Quelle A nach Quelle B gemorpht.



Bemerkungen:

Nach der Synthese kann der Loop in den Quellen wieder verändert werden.
Die Quellsamples selber sind nicht zu löschen.
@endnode

@node MixVirtuel "MIX (kreieren eines virtuellen Instrumentes)"

Die Mix Funktion dient dem Zusammenmischen mehrerer Samples
zu einem einzigen Sample.

Ausgangsposition ist die aktuelle Crsr Position. Dabei werden alle Samples
einer Zeile ab Crsr zu einem neuen Sample gemixt.

1. Länge und Stimmlage des resultierenden Samples
   ist mit dem Sample der Ausgangsposition identisch.

ACHTUNG: um kompatibel zu bleiben, ist das Volumen der zu mixenden Samples
         auf 100 zu setzen.

Bemerkung: Bei nur einem Sample wird ein @{"REMIX" link RemixVirtuel} erzeugt

@toc "HelpMenu"
@endnode

@node QueVirtuel "MIX (kreieren eines virtuellen Instrumentes)"
@toc "HelpMenu"
Die Que Funktion dient dem Aneinanderreihen mehrerer Samples
zu einem einzigen Sample.

Ausgangsposition ist die aktuelle Crsr Position. Dabei werden alle Samples
einer Spalte ab Crsr zu einem neuen Sample zusammengefügt.

1. Stimmlage des resultierenden Samples ist mit dem Sample der Ausgangsposition identisch 
2. Länge des resultierenden Samples setzt sich aus der Summe der Teilsamples zusammen.

ACHTUNG: um kompatibel zu bleiben ist das Volumen der zu mixenden Samples
         auf 100 zu setzen.

Bemerkung: Bei nur einem Sample wird ein @{"REMIX" link RemixVirtuel} erzeugt

@endnode

@node RemixVirtuel "REMIX (kreieren eines virtuellen Instrumentes)"
@toc "HelpMenu"
  Die Remix Funktion macht eine virtuelle Kopie des aktuellen Samples.
  (Spezialfall der Mix/Que Funktionen)

  Das nächsthöhere Sample wird dabei überschrieben.

  Aufgrund einiger Rechenungenauigkeit ist das Sample nicht exakt identisch
  mit dem Ausgangssample und sollte nachträglich gestimmt werden.

@endnode

@node RvsVirtuel "RVS (Parameter eines Samples)"
@toc "HelpMenu"

  Das aktuelle Sample wird gespiegelt
@endnode

@node Render "Rendering"

  Auch bekannt unter: "Absamplen des Ausgangens", Resampling ...

  RENDER
         Renderprozess starten. Die Soundausgabe wird in ein File umgelenkt, und entsprechend
         konvertiert.

         Die Renderfrequenz wird direkt aus der Systemfrequenz uebernommen.
         Ge"mute"ete Tracks werden nicht gerendert.
         DSP ist auch während des Renderings aktiv.

         Die einzige Operation die jetzt noch erlaubt ist, ist PLAYER-> STOP (Song stoppen)
         Nur so kann der Renderprozess jederzeit abgeschlossen werden.

         Falls das Ende des Songs erreicht wird, stoppt der Renderprozess.

         Kurze Files könnten als Samples wiederverwendet werden.

  TYPE
         -> 8         8  Bit
         ->16         16 Bit

         -> M         Mono
         -> S         Stereo

         -> MS        Reverse Order Format
         
         -> HQ        HQ Mode (50% langsamer, erhöhte Rechengenauigkeit, Beta)
                      Wirkt auch in Echtzeit.

         -> A         Antialias (Not yet Implemented)
                      Wirkt auch in Echtzeit.


  FORMAT
         -> RAW       Rohformat, ohne Header (Zusatzinformationen)

         -> MAES      Maestro Format

         -> MAUD      16 Bit iff Format

         -> WAV       Wave Format


@endnode

@node DownsampleVirtuel "Downsample (Parameter eines Samples)"

  Diese Funktion verschiebt das aktuelle Sample um eine
  Oktave tiefer (mit SHIFT höher).

  Die Zwischensamples werden linear interpoliert, somit
  wird die Samplefrequenz verdoppelt

  -> um die ursprüngliche Tonhöhe zu erhalten
     ist das Sample eine Oktave höher anzuspielen

  -> das Quantisierungsrauschen niederfrequenter Samples
     vermindert sicht stark (Qualitätssteigerung)

  -> Der aktuelle Speicherbedarf des Samples verdoppelt sich !


@endnode

@node ISampleVirtuel "Invertieren (Parameter eines Samples)"

  Diese Funktion dreht die Phasenlange eines Samples um 180°.
  Spiegelung entlang der Zeitachse.

@endnode

@node FiltVirtuel "FILT (Parameter eines Samples)"

  Filtertypus: Interpolationsfilter

    Mit diesem einfachen Filter, können Instrumente
    aufgehellt oder abgedunkelt werden. (Brightness).



  Ohne SHIFT:  Ein Klick auf das FILT Gadget bewirkt eine Zunahme der Filtertiefe
               (abdunkeln)

  Mit  SHIFT:  Ein Klick auf das FILT Gadget bewirkt eine Abnahme der Filtertiefe
               (aufhellen)



  WertBeipiele (Filtertiefe) :

     -2         -1        0         9             25
  sehr hell    hell    FILTER     dunkel      sehr dunkel
                       INAKTIV 


  HINWEISE: - Mehrmaliges Abdunkeln/Aufhellen bewirkt keine Qualitätsverluste des
              Originalsamples.

            - Negativfilterung bewirkt starkes Rauschen.
          
@toc "HelpMenu"
@endnode
